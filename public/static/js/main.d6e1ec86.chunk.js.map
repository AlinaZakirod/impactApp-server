{"version":3,"sources":["history.js","components/user-pages/Signup.js","components/user-pages/Login.js","components/category-components/CategoryList.js","components/Home.js","components/Navbar.js","components/category-components/CategoryDetails.js","components/user-pages/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","Signup","props","state","fullName","email","password","message","event","target","name","value","this","setState","preventDefault","axios","post","process","withCredentials","then","responseFromServer","updatedUserSuggestedActs","data","onUserChange","history","push","catch","err","response","console","log","currentUser","className","src","onSubmit","handleSubmit","onChange","genericSync","type","placeholder","React","Component","Login","userDoc","CategoryList","categoriesFromBackEnd","map","oneCat","i","key","to","pathname","_id","theId","details","title","description","Home","addNewCategory","e","listOfCategories","newCategory","titleCategory","descriptionCategory","author","unshift","showAddCategoryForm","categoriesList","getAllCategories","updateInput","toggleForm","onClick","Navbar","theUser","doLogout","handleChangeAct","actId","finalActs","arrayOfActions","filter","action","category","currentCategory","showCategoryDetails","actionsThatMatchedCategory","location","singleAction","showAddActForm","toggleFormCategory","showEditCategoryForm","handleChange","addNewActToDb","listOfActions","newAct","titleAct","descriptionAct","valueOfAct","actCategory","getAllActions","editCategoryInDb","updatedCategory","titleCat","descriptionCat","actionsFromBackEnd","allActs","min","handleChnge","oneCategory","getCategoryObjforDelete","Dashbord","getLessSuggestedActs","treatedSuggestedActs","singledSuggestedAct","getAllSuggestedActs","singleAct","currentAct","score","updateScore","handleViewDetails","detailsUnfolded","completedActs","suggestedActs","slice","userSuggestedActs","length","y","App","get","responseCategories","allCategories","responseActions","logout","delete","deleteCategory","newCategories","editCategory","catObj","responseFromTheBackend","syncCurrentUSer","user","role","aria-label","exact","path","render","getCategoryObjforEdit","Dashboard","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6e1ec86.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport axios from \"axios\";\nimport history from \"../../history\";\n\nexport default class Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      password: \"\",\n      message: null\n    };\n  }\n\n  genericSync(event) {\n    // console.log(\"what is: \", event.target.value)\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  // reload = () => {\n  //   // console.log(\"reloading \", this.state, this.props);\n  //   if (this.props.currentUser) {\n  //     this.props.history.push(\"/\");\n  //   } else {\n  //     setTimeout(() => {\n  //       this.reload();\n  //     }, 100);\n  //   }\n  // };\n\n  handleSubmit(event) {\n    // console.log(\"submitting form\");\n    event.preventDefault();\n\n    axios\n      .post(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_IMPACT_SERVER}/api/signup`,\n        // the data from the form (AKA req.body) that we are sending to this route to do the job\n        this.state,\n        // secure sending\n        { withCredentials: true }\n      )\n      .then(responseFromServer => {\n        const { updatedUserSuggestedActs } = responseFromServer.data;\n        this.props.onUserChange(updatedUserSuggestedActs);\n        this.props.history.push(\"/\");\n        // this.reload();\n        // history.push(\"/\");\n      })\n      .catch(err => {\n        if (err.response.data)\n          return this.setState({ message: err.response.data.message });\n      });\n  }\n\n  render() {\n    console.log(\"Do I have user in Signup: \", this.props.currentUser);\n    console.log(\" what is this >>>>>> \", this);\n    const { fullName, email, password } = this.state;\n    // console.log(\"STATE: \", this.state);\n    if (this.props.currentUser) {\n      return (\n        <div>\n          <h2>\n            Welcome to your app, {this.props.currentUser.fullName} ! You're\n            signed in!{\" \"}\n          </h2>\n        </div>\n      );\n    }\n\n    return (\n      <section\n        className=\"hero is-success  is-fullheight\"\n        src=\"../../public/landing-page.jpg\"\n      >\n        <div className=\"hero-body\">\n          {/* <div class=\"columns\"> */}\n          <div className=\"column is-one-fifth\"></div>\n          <div className=\"column is-one-third has-text-left\">\n            <h2 className=\"title is-1\">Sign up </h2>\n            <form\n              onSubmit={event => {\n                this.handleSubmit(event);\n              }}\n            >\n              <div className=\"control\">\n                <label className=\"label\"> Full name: </label>\n                <input\n                  className=\"input\"\n                  value={fullName} // this.state.fullName\n                  onChange={event => this.genericSync(event)}\n                  type=\"text\"\n                  name=\"fullName\"\n                  placeholder=\"Full Name\"\n                />\n              </div>\n\n              <div className=\"control\">\n                <label className=\"label\"> Email: </label>\n                <input\n                  className=\"input\"\n                  value={email} // this.state.email\n                  onChange={event => this.genericSync(event)}\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"my-email@email.com\"\n                />\n              </div>\n\n              <div className=\"control\">\n                <label className=\"label\"> Password</label>\n                <input\n                  className=\"input\"\n                  value={password} // this.state.password\n                  onChange={event => this.genericSync(event)}\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"***********\"\n                />\n              </div>\n\n              <button className=\"button\"> Sign Up </button>\n\n              <div>\n                <p>Already have an account?</p>\n                <button>Login</button>\n              </div>\n            </form>\n            {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n          </div>\n          {this.state.message && <div> {this.state.message} </div>}\n          {/* </div> */}\n        </div>\n      </section>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      message: null\n    };\n  }\n\n  genericSync(event) {\n    // console.log(\"what is: \", event.target.value)\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    // console.log(\"submitting form\");\n    event.preventDefault();\n\n    axios\n      .post(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_IMPACT_SERVER}/api/login`,\n        // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n        this.state,\n        // secure sending\n        { withCredentials: true }\n      )\n      .then(responseFromServer => {\n        // console.log(\"response is:\", responseFromServer);\n        const { userDoc } = responseFromServer.data;\n        this.props.onUserChange(userDoc);\n        // console.log(this.props.match);\n        this.props.history.push(\"/\");\n        // alert(\"You are logged in.\");\n      })\n      .catch(err => {\n        // console.log(\"err: \", err.response)\n        if (err.response.data)\n          return this.setState({ message: err.response.data.message });\n      });\n  }\n\n  render() {\n    console.log(\"Do I have user in Login: \", this.props.currentUser);\n\n    const { email, password } = this.state;\n\n    return (\n      <section>\n        <h2> Login </h2>\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label> Email: </label>\n          <input\n            value={email} // this.state.email\n            onChange={event => this.genericSync(event)}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"my-email@ironhack.com\"\n          />\n\n          <label> Password</label>\n          <input\n            value={password} // this.state.password\n            onChange={event => this.genericSync(event)}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"***********\"\n          />\n          <button> Login </button>\n        </form>\n        {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n        {this.state.message && <div> {this.state.message} </div>}\n      </section>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction CategoryList(props) {\n  if (props.categoriesFromBackEnd !== null) {\n    // console.log(\">>>>\", props.categoriesFromBackEnd);\n    // console.log(\"this is the current state >>>>>>>>>> \", this.state);\n\n    return props.categoriesFromBackEnd.map((oneCat, i) => {\n      return (\n        <div className=\"card column\">\n          <header>\n            <Link\n              key={i}\n              to={{\n                pathname: `/category/${oneCat._id}`,\n                state: {\n                  theId: oneCat._id,\n                  details: oneCat\n                }\n              }}\n            >\n              <p className=\"card-header-title is-centered\" key={i}>\n                {oneCat.title}\n              </p>\n            </Link>\n          </header>\n          <div className=\"card-content\">\n            <div className=\"content\">\n              <p key={i}>{oneCat.description}</p>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  } else return \"Loading...\";\n}\n\nexport default CategoryList;\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport CategoryList from \"./category-components/CategoryList\";\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAddCategoryForm: false,\n      titleCategory: \"\",\n      descriptionCategory: \"\",\n      categoriesFromBackEnd: this.props.categoriesFromBackEnd\n    };\n  }\n\n  addNewCategory = e => {\n    e.preventDefault();\n\n    let listOfCategories = [...this.props.categoriesFromBackEnd];\n\n    let newCategory = {\n      title: this.state.titleCategory,\n      description: this.state.descriptionCategory,\n      author: this.props.currentUser\n    };\n\n    listOfCategories.unshift(newCategory);\n\n    this.setState({\n      titleCategory: \"\",\n      descriptionCategory: \"\",\n      showAddCategoryForm: false,\n      categoriesList: listOfCategories\n    });\n\n    axios\n      .post(\n        `${process.env.REACT_APP_IMPACT_SERVER}/category/create`,\n        newCategory\n      )\n      .then(newCategory => {\n        this.props.getAllCategories();\n\n        {\n          /* add some success message */\n        }\n      })\n      .catch(err => console.log(\"Error while adding the new Category \", err));\n    console.log(\"Author:\", this.props.currentUser);\n\n    console.log(\"New Category is:\", newCategory);\n  };\n\n  updateInput = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  toggleForm = () => {\n    this.setState({ showAddCategoryForm: !this.state.showAddCategoryForm });\n  };\n\n  render() {\n    if (this.props.categoriesFromBackEnd !== null) {\n      // this.props.getAllCategories();\n      // console.log(\"___________\", this.props);\n      // console.log(this.props.currentUser.fullName);\n      // console.log(\"categoriesFromBackEnd: \", this.props.categoriesFromBackEnd);\n      return (\n        <section className=\"hero is-fullheight-with-navbar\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <div>\n                <p className=\"title is-1\">Think global</p>\n                <p className=\"subtitle is-1\">Act local</p>\n              </div>\n\n              <section className=\"section\">\n                <h3 className=\"title\">All categories:</h3>\n                <div className=\"columns  $column-gap is-8 is-variable\">\n                  <CategoryList\n                    categoriesFromBackEnd={this.props.categoriesFromBackEnd}\n                    className=\"column\"\n                  />\n                </div>\n              </section>\n              {!this.state.showAddCategoryForm && this.props.currentUser && (\n                <button onClick={this.toggleForm} className=\"button is-success\">\n                  Add New Category\n                </button>\n              )}\n\n              {this.state.showAddCategoryForm && (\n                <form onSubmit={this.addNewCategory}>\n                  <h3>Add New Category</h3>\n                  <p>Title</p>\n                  <input\n                    name=\"titleCategory\"\n                    type=\"text\"\n                    value={this.state.titleCategory}\n                    onChange={this.updateInput}\n                  />\n                  <p>Description</p>\n                  <input\n                    name=\"descriptionCategory\"\n                    type=\"text\"\n                    value={this.state.descriptionCategory}\n                    onChange={this.updateInput}\n                  />\n                  <button>Submit</button>\n                </form>\n              )}\n            </div>\n          </div>\n        </section>\n      );\n    } else return \"Loading\";\n  }\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport CategoryList from \"./category-components/CategoryList\";\n\nclass Navbar extends React.Component {\n  render() {\n    console.log(\"-=-=-=-=-=-\", this.props.theUser);\n\n    return (\n      <div className=\"navbar-menu is-spaced\">\n        <div className=\"navbar-start\">\n          {this.props.theUser && (\n            <div>\n              <NavLink to=\"/\" className=\"navbar-item is-inline\">\n                Home\n              </NavLink>\n              <NavLink to=\"/dashboard\" className=\"navbar-item is-inline\">\n                Dashboard\n              </NavLink>\n              {/* <NavLink to=\"/profile\">Profile</NavLink> */}\n              <NavLink to=\"/community\" className=\"navbar-item is-inline\">\n                Community\n              </NavLink>\n            </div>\n          )}\n        </div>\n\n        <div className=\"navbar-end\">\n          {this.props.theUser && (\n            <button\n              onClick={this.props.doLogout}\n              className=\"button is-transparent is-radiusless\"\n            >\n              Logout\n            </button>\n          )}\n\n          {!this.props.theUser && (\n            <div>\n              <NavLink to=\"/login-page\" className=\"navbar-item is-inline\">\n                Login\n              </NavLink>\n              <NavLink to=\"/signup-page\" className=\"navbar-item is-inline\">\n                {\" \"}\n                Signup{\" \"}\n              </NavLink>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport axios from \"axios\";\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAddActForm: false,\n      titleAct: \"\",\n      descriptionAct: \"\",\n      valueOfAct: \"\",\n      actCategory: \"\",\n      currentCategory: this.props.location.state.details,\n      arrayOfActions: this.props.actionsFromBackEnd.allActs,\n      categoriesFromBackEnd: this.props.categoriesFromBackEnd,\n      showEditCategoryForm: false,\n      // titleCat: this.props.location.state.details.title,\n      // descriptionCat: this.props.location.state.details.description\n      titleCat: \"\",\n      descriptionCat: \"\"\n    };\n  }\n\n  handleChangeAct = actId => {\n    // const currentCategory = this.props.location.state.details;\n    // const arrayOfActions = this.props.actionsFromBackEnd;\n    // console.log(\"0~~~~~~~~~\", arrayOfActions);\n    const actionsThatMatchedCategory = this.state.arrayOfActions.filter(\n      action => action.category === this.state.currentCategory._id\n    );\n\n    // console.log(\"1~~~~~~~~~~~~~\", actionsThatMatchedCategory);\n    const finalActs = actionsThatMatchedCategory.filter(\n      action => action._id !== actId\n    );\n    // console.log(\"2~~~~~~~~~~~~~\", finalActs);\n\n    // __________________________\n\n    console.log(`${process.env.REACT_APP_IMPACT_SERVER}/act/${actId}/update`);\n    axios\n      .post(\n        `${process.env.REACT_APP_IMPACT_SERVER}/act/${actId}/update`,\n        {},\n        {\n          withCredentials: true\n        }\n      )\n\n      .then(() => {\n        // make some success message here!\n        this.setState({\n          arrayOfActions: finalActs\n        });\n      })\n\n      .catch(err => console.log(\"Error while click on `Act Now`\", err));\n  };\n\n  showCategoryDetails = () => {\n    if (this.props.categoriesFromBackEnd !== null) {\n      // const currentCategory = this.props.location.state.details;\n      // const this.state.arrayOfActions = this.props.actionsFromBackEnd;\n      const actionsThatMatchedCategory = this.state.arrayOfActions.filter(\n        action => action.category == this.state.currentCategory._id\n      );\n      console.log(\"Current category: \", this.props.location.state.details);\n\n      // console.log(\"^^^^^^^^\", currentCategory);\n      // console.log(\"********\", arrayOfActions);\n      return (\n        <div>\n          <h2>{this.state.currentCategory.title}</h2>\n          <p>{this.state.currentCategory.description}</p>\n          <b>Actions:</b>\n          {actionsThatMatchedCategory.map((singleAction, i) => {\n            console.log(singleAction);\n            return (\n              <div key={i}>\n                <p>{singleAction.title}</p>\n                <button\n                  onClick={e => {\n                    this.handleChangeAct(singleAction._id);\n                  }}\n                >\n                  Act now!\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      );\n    } else return \"loading\";\n  };\n\n  toggleForm = () => {\n    this.setState({ showAddActForm: !this.state.showAddActForm });\n  };\n\n  toggleFormCategory = () => {\n    this.setState({ showEditCategoryForm: !this.state.showEditCategoryForm });\n  };\n\n  handleChange = e => {\n    console.log(\"changing value\", e.target.name, e.target.value);\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  addNewActToDb = e => {\n    e.preventDefault();\n    console.log(\"#####\", this.state);\n    let listOfActions = [...this.state.arrayOfActions];\n    console.log(\"first\", listOfActions);\n\n    let newAct = {\n      title: this.state.titleAct,\n      description: this.state.descriptionAct,\n      value: this.state.valueOfAct,\n      category: this.state.actCategory,\n      author: this.props.currentUser\n    };\n\n    listOfActions.unshift(newAct);\n\n    this.setState({\n      showAddActForm: false,\n      titleAct: \"\",\n      descriptionAct: \"\",\n      valueOfAct: \"\",\n      actCategory: \"\",\n      arrayOfActions: listOfActions\n    });\n\n    console.log(\"second\", listOfActions);\n    axios\n      .post(`${process.env.REACT_APP_IMPACT_SERVER}/act/create`, newAct)\n      .then(newAct => {\n        this.props.getAllActions();\n      })\n      .catch(err => console.log(\"Error while adding the new Act \", err));\n\n    // this.props.getAllActions();\n  };\n\n  //end of functions for 'Add Actions'\n\n  editCategoryInDb = e => {\n    e.preventDefault();\n    if (this.state.currentCategory !== null) {\n      let listOfCategories = [...this.state.categoriesFromBackEnd];\n      console.log(\"Cat first\", listOfCategories);\n\n      let updatedCategory = {\n        title: this.state.titleCat,\n        description: this.state.description\n      };\n\n      listOfCategories.unshift(updatedCategory);\n\n      this.setState({\n        showEditCategoryForm: false,\n        titleCat: \"\",\n        descriptionCat: \"\"\n      });\n\n      console.log(\"Cat second\", listOfCategories);\n      axios\n        .post(\n          `${process.env.REACT_APP_IMPACT_SERVER}category/${this.state.currentCategory._id}/update`,\n          updatedCategory\n        )\n        .then(newAct => {\n          this.props.getAllCategories();\n        })\n        .catch(err => console.log(\"Error while editing theCategory \", err));\n\n      const updatedCategoryList = this.props.getAllCategories();\n      console.log(\"Updated\", updatedCategory);\n    } else {\n      return \"loading category...\";\n    }\n  };\n\n  render() {\n    if (this.props.categoriesFromBackEnd !== null) {\n      console.log(\"Current category\", this.state.currentCategory);\n      console.log(\"current User:\", this.props.currentUser._id);\n\n      return (\n        <div>\n          {/* <p>Category: {this.props.location.state.details.title}</p> */}\n          {this.showCategoryDetails()}\n          <div>\n            {/* start of Add Action */}\n            <div>\n              {!this.state.showAddActForm && (\n                <button onClick={this.toggleForm}>Add New Action</button>\n              )}\n\n              {this.state.showAddActForm && (\n                <form onSubmit={this.addNewActToDb}>\n                  <h3>Add New Action</h3>\n                  <p>Title</p>\n                  <input\n                    name=\"titleAct\"\n                    type=\"text\"\n                    value={this.state.titleAct}\n                    onChange={this.handleChange}\n                  />\n                  <p>Description</p>\n                  <input\n                    name=\"descriptionAct\"\n                    type=\"text\"\n                    value={this.state.descriptionAct}\n                    onChange={this.handleChange}\n                  />\n\n                  <p>Value: </p>\n                  <input\n                    name=\"valueOfAct\"\n                    type=\"number\"\n                    min=\"0\"\n                    value={this.state.valueOfAct}\n                    onChange={this.handleChnge}\n                  />\n\n                  <p>Select Category</p>\n                  <select name=\"actCategory\" onChange={this.handleChange}>\n                    <option value=\"\">Pick category</option>\n                    {this.props.categoriesFromBackEnd.map(oneCategory => {\n                      return (\n                        <option\n                          // value={oneCategory._id}\n                          value={oneCategory._id}\n                          key={oneCategory._id}\n                        >\n                          {oneCategory.title}\n                        </option>\n                      );\n                    })}\n                  </select>\n\n                  <button>Submit</button>\n                </form>\n              )}\n            </div>\n            {/* end of Add action */}\n            <p>_________________________</p>\n\n            {/* <button\n              onClick={() => {\n                this.props.getCategoryObj(this.props.location.state.details);\n              }}\n            >\n              Delete Category\n            </button> */}\n\n            <div>\n              {this.state.currentCategory.author ===\n                this.props.currentUser._id && (\n                <div>\n                  <div>\n                    {!this.state.showEditCategoryForm && (\n                      <button onClick={this.toggleFormCategory}>\n                        Edit Category\n                      </button>\n                    )}\n\n                    {this.state.showEditCategoryForm &&\n                      this.props.location.state.details && (\n                        <form onSubmit={this.editCategoryInDb}>\n                          <h3>Edit {this.state.currentCategory.title}</h3>\n                          <p>Title</p>\n                          <input\n                            name=\"titleAct\"\n                            type=\"text\"\n                            placeholder={this.state.currentCategory.title}\n                            value={this.state.titleAct}\n                            onChange={this.handleChange}\n                          />\n                          <p>Description</p>\n                          <textarea\n                            name=\"descriptionAct\"\n                            type=\"text\"\n                            placeholder={this.state.currentCategory.description}\n                            value={this.state.descriptionAct}\n                            onChange={this.handleChange}\n                          />\n                          <button>Save Changes</button>\n                        </form>\n                      )}\n                  </div>\n\n                  <div>\n                    <button\n                      onClick={() => {\n                        this.props.getCategoryObjforDelete(\n                          this.props.location.state.details\n                        );\n                      }}\n                    >\n                      Delete Category{\" \"}\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return \"Loading...\";\n    }\n  }\n}\n\n//WITHOUT PARAMETERS\n{\n  /* <button onClick={this.function}></button> */\n}\n\n//WITH PARAMETERS\n{\n  /* <button onClick={e => this.function(parameterGoesHere)}></button> */\n}\n\n// export { handleChangeAct };\n","import React from \"react\";\nimport axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n// import { handleChangeAct } from \"../category-components/CategoryDetails\";\n\nclass Dashbord extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      treatedSuggestedActs: null,\n      detailsUnfolded: false,\n      // completedActs: this.props.completedActs,\n      suggestedActs: this.props.currentUser.suggestedActs.slice(0, 4),\n      score: this.props.currentUser.score\n    };\n  }\n\n  componentDidMount() {\n    const userSuggestedActs = [];\n    // console.log(\"1.-=-=-=-=-=\", this.state.suggestedActs[1]);\n    // console.log(\"2.-=-=-=-=-=\", this.props.actionsFromBackEnd.allActs[1]._id);\n    for (let i = 0; i < this.props.currentUser.suggestedActs.length; i++) {\n      for (let y = 0; y < this.props.actionsFromBackEnd.allActs.length; y++) {\n        if (\n          this.props.actionsFromBackEnd.allActs[y]._id ===\n          this.props.currentUser.suggestedActs[i]\n        ) {\n          userSuggestedActs.unshift(this.props.actionsFromBackEnd.allActs[y]);\n          // console.log(\"3.-=-=-=-=-=\", userSuggestedActs);\n        }\n      }\n    }\n    console.log(\"****\", userSuggestedActs);\n\n    this.setState(\n      {\n        treatedSuggestedActs: userSuggestedActs\n      },\n      () => console.log(\"####\", this.state.treatedSuggestedActs)\n    );\n  }\n\n  getLessSuggestedActs = () => {\n    // this.actTreatment();\n    console.log(\"All\", this.state.treatedSuggestedActs);\n    if (this.state.treatedSuggestedActs !== null) {\n      // const fourActs = this.state.treatedSuggestedActs.slice(0, 4);\n      // console.log(\"4:\", fourActs);\n      console.log(\"cut suggested acts:\", this.state.treatedSuggestedActs);\n      return (\n        <div>\n          <p>Suggested Acts:</p>\n          {this.state.treatedSuggestedActs\n            .filter((singledSuggestedAct, i) => i < 4)\n            .map((singledSuggestedAct, i) => {\n              return (\n                <div>\n                  <h4>\n                    <b>{singledSuggestedAct.title}</b>{\" \"}\n                  </h4>\n                  <p>{singledSuggestedAct.value}</p>\n                  <p>{singledSuggestedAct.category}</p>\n                  <button\n                    onClick={e => {\n                      this.handleChangeAct(singledSuggestedAct._id);\n                    }}\n                  >\n                    Act Now!\n                  </button>\n                </div>\n              );\n            })}\n          <button onClick={this.getAllSuggestedActs}>\n            View All suggested Acts\n          </button>\n        </div>\n      );\n    }\n  };\n\n  handleChangeAct = actId => {\n    if (this.state.treatedSuggestedActs !== null) {\n      const finalActs = this.state.treatedSuggestedActs.filter(\n        singleAct => singleAct._id !== actId\n      );\n\n      // how to get the value of the act? than update the score\n      const currentAct = this.state.treatedSuggestedActs.filter(\n        singleAct => singleAct._id === actId\n      );\n\n      console.log(\"SCORE\", this.state.score);\n      const updateScore = currentAct[0].value + this.state.score;\n      console.log(\"To add\", updateScore);\n      axios\n        .post(\n          `${process.env.REACT_APP_IMPACT_SERVER}/act/${actId}/update`,\n          {},\n          {\n            withCredentials: true\n          }\n        )\n\n        .then(() => {\n          this.setState({\n            treatedSuggestedActs: finalActs,\n            score: updateScore\n          });\n        })\n        .catch(err => console.log(\"Error while click on `Act Now`\", err));\n    }\n  };\n\n  getAllSuggestedActs = () => {\n    console.log(\"MOREEEEEEE\");\n    return (\n      <h2>MORE</h2>\n      // <div>\n      //   {this.state.treatedSuggestedActs\n      //     .filter((singledSuggestedAct, i) => i > 4)\n      //     .map((singledSuggestedAct, i) => {\n      //       return (\n      //         <div>\n      //           <h4>\n      //             <b>{singledSuggestedAct.title}</b> {singledSuggestedAct.value}\n      //           </h4>\n      //           <p>{singledSuggestedAct.category}</p>\n      //           <button>Act Now!</button>\n      //         </div>\n      //       );\n      //     })}\n      //   <button onClick={this.getAllSuggestedActs}>Hide</button>\n      // </div>\n    );\n  };\n\n  handleViewDetails = () => {\n    this.setState({\n      detailsUnfolded: true\n    });\n    return (\n      <div>\n        <p>Completed acts:</p>\n        {this.props.currentUser.completedActs.map((singleAction, i) => {\n          return (\n            <div key={i}>\n              <p>\n                {singleAction}\n                {singleAction.title} {singleAction.value}\n              </p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  toggleForm = () => {\n    this.setState({ detailsUnfolded: !this.state.detailsUnfolded });\n  };\n\n  // const actionsThatMatchedCategory = this.state.arrayOfActions.filter(\n  //   action => action.category === this.state.currentCategory._id\n  // );\n\n  render() {\n    if (this.props.currentUser !== null) {\n      console.log(\">>>>>>>>>>>>>>>>>>\", this.state.treatedSuggestedActs);\n\n      return (\n        <div>\n          <h2>Hi there, {this.props.currentUser.fullName}</h2>\n          <h4>Your score is {this.state.score}</h4>\n          {!this.state.detailsUnfolded && (\n            <button onClick={this.toggleForm}>View Details</button>\n          )}\n\n          {this.state.detailsUnfolded && (\n            <div>\n              <p>Completed acts:</p>\n              {this.state.treatedSuggestedActs.map((singleAction, i) => {\n                return (\n                  <div>\n                    <div key={i}>\n                      <b>{singleAction.title}</b> {singleAction.value}\n                    </div>\n                  </div>\n                );\n              })}\n              <button onClick={this.toggleForm}>Show Less</button>\n            </div>\n          )}\n\n          <p>________________________________</p>\n          {this.getLessSuggestedActs()}\n        </div>\n      );\n    } else {\n      return \"Loading...\";\n    }\n  }\n}\n\nexport default Dashbord;\n","import React from \"react\";\nimport \"./App.css\";\nimport history from \"./history\";\nimport axios from \"axios\";\n\nimport { Switch, Route, NavLink } from \"react-router-dom\";\n\nimport Signup from \"./components/user-pages/Signup\";\nimport Login from \"./components/user-pages/Login\";\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Navbar\";\nimport CategoryList from \"./components/category-components/CategoryList\";\nimport CategoryDetails from \"./components/category-components/CategoryDetails\";\nimport Dashboard from \"./components/user-pages/Dashboard\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      categoriesFromBackEnd: null,\n      actionsFromBackEnd: null\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${process.env.REACT_APP_IMPACT_SERVER}/api/checkuser`, {\n        withCredentials: true\n      })\n      .then(responseFromTheBackend => {\n        // console.log(\"User in APP.JS: \", responseFromTheBackend)\n        const { userDoc } = responseFromTheBackend.data;\n        this.syncCurrentUSer(userDoc);\n      })\n      .catch(err =>\n        console.log(\n          \"Err while getting the user from the checkuser route: \",\n          err\n        )\n      );\n\n    this.getAllCategories();\n    this.getAllActions();\n\n    // setTimeout(() => {\n    //   this.setState({\n    //     ready: true\n    //   });\n    // }, 1000);\n  }\n\n  syncCurrentUSer(user) {\n    console.log(\"current usre info ---- \", user);\n    this.setState({ currentUser: user });\n  }\n\n  getAllCategories = () => {\n    axios\n      .get(`${process.env.REACT_APP_IMPACT_SERVER}/category/allCats`)\n      .then(responseCategories => {\n        console.log(\n          \"Categories from DB: \",\n          responseCategories.data.allCategories\n        );\n        this.setState({\n          categoriesFromBackEnd: responseCategories.data.allCategories\n        });\n      })\n      .catch(err => console.log(\"Err while getting categories: \", err));\n  };\n\n  getAllActions = () => {\n    axios\n      .get(`${process.env.REACT_APP_IMPACT_SERVER}/acts`)\n      .then(responseActions => {\n        console.log(\"Actions are: \", responseActions.data);\n        this.setState({\n          actionsFromBackEnd: responseActions.data\n        });\n      })\n      .catch(err => console.log(\"Err while getting actions: \", err));\n  };\n\n  logout = () => {\n    this.setState({ currentUser: null });\n    axios\n      .delete(`${process.env.REACT_APP_IMPACT_SERVER}/api/logout`, {\n        withCredentials: true\n      })\n      .then(() => {\n        this.props.history.push(\"/\");\n      })\n      .catch(err => console.log(\"error while logging out \", err));\n  };\n\n  deleteCategory = oneCat => {\n    // console.log(\"do i have cat here: \", oneCat.author);\n    // console.log(\"Current user: \", this.state.currentUser._id);\n    // && this.state.currentUser._id === oneCat.author\n    if (oneCat !== null) {\n      const theId = oneCat._id;\n      console.log(\"The id: \", theId);\n\n      axios\n        .post(`${process.env.REACT_APP_IMPACT_SERVER}/category/${theId}/delete`)\n        .then(response => {\n          const newCategories = this.state.categoriesFromBackEnd.filter(\n            category => category._id !== oneCat._id\n          );\n          this.setState({\n            categoriesFromBackEnd: newCategories\n          });\n          console.log(\"helllooooo: =-=-=-=-=-=-=-=-=-= \", history);\n          history.push(\"/\");\n        })\n        .catch(err => console.log(\"Error while deleteing the category \", err));\n    } else return \"loading\";\n  };\n\n  editCategory = catObj => {\n    console.log(\"do i have cat here: \", catObj.title);\n    // if (singleCat !== null) {\n    //   const theId = singleCat._id;\n    //   console.log(\"The id of edited category : \", theId);\n\n    //   axios\n    //     .post(`${process.env.REACT_APP_IMPACT_SERVER}/category/${theId}/update`)\n    //     .then(response => {\n    //       // const newCategories = this.state.categoriesFromBackEnd.filter(\n    //       //   category => category._id !== oneCat._id\n    //       // );\n    //       // this.setState({\n    //       //   categoriesFromBackEnd: newCategories\n    //       // });\n    //       // console.log(\"helllooooo: =-=-=-=-=-=-=-=-=-= \", history);\n    //       // history.push(\"/\");\n    //     })\n    //     .catch(err => console.log(\"Error while updating the category \", err));\n    // } else return \"loading\";\n  };\n\n  render() {\n    // console.log(\"the state in APPJS: \", this.state);\n    // console.log(\"++++++++++++++\", this.state.categoriesFromBackEnd);\n    // console.log(\"########\", this.state.currentUser);\n    return (\n      <div>\n        <div className=\"\">\n          <header className=\"container\">\n            <Navbar\n              theUser={this.state.currentUser}\n              doLogout={this.logout}\n              className=\"navbar is-fixed-top is-primary\"\n              role=\"navigation\"\n              aria-label=\"main navigation\"\n            />\n          </header>\n          <Switch>\n            {/* this is example how we would render component normally */}\n            {/* <Route exact path=\"/somePage\" component={ someComponentThatWillRenderWhenThisRouteIsHit }   /> */}\n            {/* <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/act/add\" component={addAct} /> */}\n\n            {/* if we have to pass some props down to a component,\n            we can't use a standard way of rendering using component={},\n            but instead we have to use render = {}  like in the example below */}\n            <Route\n              exact\n              path=\"/signup-page\"\n              render={props => (\n                <Signup\n                  {...props}\n                  currentUser={this.state.currentUser}\n                  onUserChange={userDoc => this.syncCurrentUSer(userDoc)}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/login-page\"\n              render={props => (\n                <Login\n                  {...props}\n                  currentUser={this.state.currentUser}\n                  onUserChange={userDoc => this.syncCurrentUSer(userDoc)}\n                />\n              )}\n            />\n\n            {/* <Route path=\"/category\" component={ActionList} /> */}\n\n            {/* it was the way Marcos showed me */}\n            {/* <Route\n              exact\n              path=\"/category\"\n              render={props => <CategoryList {...props} />}\n            />\n\n            <Route\n              path=\"/category/:id\"\n              render={props => <CategoryDetails {...props} />}\n            /> */}\n\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <Home\n                  {...props}\n                  getAllCategories={this.getAllCategories}\n                  currentUser={this.state.currentUser}\n                  categoriesFromBackEnd={this.state.categoriesFromBackEnd}\n                  actionsFromBackEnd={this.state.actionsFromBackEnd}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <CategoryList\n                  {...props}\n                  currentUser={this.state.currentUser}\n                  categoriesFromBackEnd={this.state.categoriesFromBackEnd}\n                  actionsFromBackEnd={this.state.actionsFromBackEnd}\n                />\n              )}\n            />\n\n            <Route\n              path=\"/category/\"\n              render={props => (\n                <CategoryDetails\n                  {...props}\n                  getCategoryObjforEdit={catObj => this.editCategory(catObj)}\n                  getCategoryObjforDelete={catObj =>\n                    this.deleteCategory(catObj)\n                  }\n                  getAllActions={this.getAllActions}\n                  getAllCategories={this.getAllCategories}\n                  currentUser={this.state.currentUser}\n                  categoriesFromBackEnd={this.state.categoriesFromBackEnd}\n                  actionsFromBackEnd={this.state.actionsFromBackEnd}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/dashboard\"\n              render={props => (\n                <Dashboard\n                  {...props}\n                  getAllActions={this.getAllActions}\n                  currentUser={this.state.currentUser}\n                  categoriesFromBackEnd={this.state.categoriesFromBackEnd}\n                  actionsFromBackEnd={this.state.actionsFromBackEnd}\n                  currentUser={this.state.currentUser}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Router } from \"react-router-dom\";\nimport history from \"./history\";\nimport \"bulma/css/bulma.css\";\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}