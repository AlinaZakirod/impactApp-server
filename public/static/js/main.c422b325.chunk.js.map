{"version":3,"sources":["history.js","components/user-pages/Signup.js","components/user-pages/Login.js","components/category-components/CategoryList.js","components/Home.js","components/Navbar.js","components/category-components/CategoryDetails.js","components/user-pages/Profile.js","components/user-pages/Dashboard.js","components/user-pages/Community.js","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","Signup","props","state","fullName","email","password","message","suggestedActs","event","target","name","value","this","setState","preventDefault","axios","post","process","withCredentials","then","responseFromServer","console","log","populatedUser","data","onUserChange","history","push","catch","err","response","currentUser","className","onSubmit","handleSubmit","onChange","genericSync","type","placeholder","to","React","Component","Login","userDoc","CategoryList","categoriesFromBackEnd","map","oneCat","i","key","pathname","_id","theId","details","title","description","Home","addNewCategory","e","listOfCategories","newCategory","titleCategory","descriptionCategory","author","unshift","showAddCategoryForm","categoriesList","getAllCategories","updateInput","showModal","document","getElementById","modal","getElementsByClassName","style","display","closeModal","onClick","id","aria-label","Navbar","mobileMenu","nav","classList","add","hideMenu","remove","burgerMenuOpen","theUser","role","href","src","height","aria-expanded","data-target","aria-hidden","doLogout","showCategoryDetails","actionsThatMatchedCategory","arrayOfActions","filter","action","category","currentCategory","location","singleAction","getActIdforActNow","toggleFormCategory","showEditCategoryForm","handleChange","addNewActToDb","listOfActions","newAct","titleAct","descriptionAct","valueOfAct","actCategory","showAddActForm","getAllActions","toast","success","editCategoryInDb","updatedCategory","titleCat","descriptionCat","newListOfCategories","getCategoryObjforEdit","showModalCategory","modalCategory","closeModalCategory","actionsFromBackEnd","allActs","suggested","min","oneCategory","getCategoryObjforDelete","Profile","toggleForm","detailsUnfolded","profileQueryStart","newQuery","zipCode","income","householdSize","responseFromBackEnd","total","milesAYear","mpg","shoppingServices","shoppingMeatFishEggs","profileQueryHousehold","houseArea","waterWage","carbonFootprintGrade","showDetails","completedWhole","length","y","completedActs","handleActNow","singleAct","score","updatedScore","newSuggestedActs","act","showUpdatedScore","openTab","tabId","tabcontent","tablink","innerText","replace","currentTarget","thisBlock","placeType","categories","getTheUser","slice","selected","class","Dashbord","handleChangeAct","actId","treatedSuggestedActs","finalActs","currentAct","updateScore","handleViewDetails","Community","getAllUsers","get","allUsersFromBackend","App","responseFromTheBackend","syncCurrentUSer","responseCategories","allCategories","responseActions","logout","delete","userFinalActs","editCategory","updated","deleteCategory","newCategories","error","user","exact","path","render","blah","catObj","Dashboard","component","Boolean","window","hostname","match","ReactDOM","Fragment","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c422b325.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\n// import signupBg from '../../../build/landing-page.jpg\"';\n\nexport default class Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      password: \"\",\n      message: null,\n      suggestedActs: \"\"\n    };\n  }\n\n  genericSync(event) {\n    // console.log(\"what is: \", event.target.value)\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    // console.log(\"submitting form\");\n    event.preventDefault();\n\n    axios\n      .post(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_IMPACT_SERVER}/api/signup`,\n        // the data from the form (AKA req.body) that we are sending to this route to do the job\n        this.state,\n        // secure sending\n        { withCredentials: true }\n      )\n      .then(responseFromServer => {\n        console.log(\"is this working?????\", responseFromServer);\n        const { populatedUser } = responseFromServer.data;\n        this.props.onUserChange(populatedUser);\n        console.log(\"SIGNUP|POPULATED USER:\", populatedUser);\n\n        this.props.history.push(\"/\");\n      })\n      .catch(err => {\n        if (err.response.data)\n          return this.setState({ message: err.response.data.message });\n      });\n  }\n\n  render() {\n    console.log(\"Do I have user in Signup: \", this.props.currentUser);\n    console.log(\" what is this >>>>>> \", this);\n    const { fullName, email, password, suggestedActs } = this.state;\n    console.log(\"SIGNUP STATE:\", this.state);\n    console.log(\"SIGNUP PROPS:\", this.props);\n\n    // console.log(\"STATE: \", this.state);\n    if (this.props.currentUser) {\n      return (\n        <div>\n          <h2>\n            Welcome to your app, {this.props.currentUser.fullName} ! You're\n            signed in!{\" \"}\n          </h2>\n        </div>\n      );\n    }\n\n    return (\n      <section className=\"hero is-fullheight has-bg-img horizontalCenter\">\n        <div className=\"hero-body\">\n          {/* <div class=\"columns\"> */}\n          <div className=\"column is-one-fifth\"></div>\n          <div className=\"column is-one-quarter has-text-left\">\n            <form\n              onSubmit={event => {\n                this.handleSubmit(event);\n              }}\n            >\n              <div className=\"field\">\n                <label className=\"impactTitle h2Impact\">Sign up</label>\n                <div className=\"content\"></div>\n                <p className=\"control has-icons-left \">\n                  <input\n                    className=\"input is-medium\"\n                    value={fullName} // this.state.fullName\n                    onChange={event => this.genericSync(event)}\n                    type=\"text\"\n                    name=\"fullName\"\n                    placeholder=\"Your Name\"\n                  />\n\n                  <span className=\"icon is-small is-left\">\n                    <i className=\"fa fa-user\"></i>\n                  </span>\n                </p>\n              </div>\n\n              <div className=\"field\">\n                <p className=\"control has-icons-left\">\n                  <input\n                    className=\"input is-medium\"\n                    value={email} // this.state.email\n                    onChange={event => this.genericSync(event)}\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email@ironhack.com\"\n                  />\n                  <span className=\"icon is-small is-left\">\n                    <i className=\"fa fa-envelope\"></i>\n                  </span>\n                </p>\n              </div>\n\n              <div className=\"field\">\n                <p className=\"control has-icons-left\">\n                  <input\n                    className=\"input is-medium\"\n                    value={password} // this.state.password\n                    onChange={event => this.genericSync(event)}\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                  />\n                  <span className=\"icon is-small is-left\">\n                    <i className=\"fa fa-lock\"></i>\n                  </span>\n                </p>\n              </div>\n\n              <div className=\"field\">\n                <p className=\"control\">\n                  <button className=\"button impactButton\">Sign Up</button>\n                </p>\n              </div>\n\n              <div>\n                <p className=\"subtitle is-5\">\n                  Already have an account?\n                  <Link className=\"impactInlineButton\" to=\"/login-page\">\n                    {\" \"}\n                    Login\n                  </Link>\n                </p>\n              </div>\n            </form>\n            {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n          </div>\n          {this.state.message && <div> {this.state.message} </div>}\n          {/* </div> */}\n        </div>\n      </section>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      message: null\n    };\n  }\n\n  genericSync(event) {\n    // console.log(\"what is: \", event.target.value)\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    // console.log(\"submitting form\");\n    event.preventDefault();\n\n    axios\n      .post(\n        // route we are hitting in the backend\n        `${process.env.REACT_APP_IMPACT_SERVER}/api/login`,\n        // the data from the form (AKA req.body 🚀) that we are sending to this route to do the job\n        this.state,\n        // secure sending\n        { withCredentials: true }\n      )\n      .then(responseFromServer => {\n        // console.log(\"response is:\", responseFromServer);\n        const { userDoc } = responseFromServer.data;\n        this.props.onUserChange(userDoc);\n        // console.log(this.props.match);\n        this.props.history.push(\"/\");\n        // alert(\"You are logged in.\");\n      })\n      .catch(err => {\n        console.log(\"err: \", err.response);\n        if (err.response.data)\n          return this.setState({ message: err.response.data.message });\n      });\n  }\n\n  render() {\n    console.log(\"Do I have user in Login: \", this.props.currentUser);\n\n    const { email, password } = this.state;\n\n    return (\n      // <section className=\"hero is-fullheight horizontalCenter  has-bg-img\">\n      <section className=\"hero impactFullheight has-bg-img marginless is-fullheight\">\n        <div className=\"hero-body columns\">\n          {/* <div className=\"hero-body columns is-desktop\"> */}\n\n          <div className=\"column is-one-quarter has-text-left is-offset-2 horizontalCenter\">\n            <form\n              onSubmit={event => {\n                this.handleSubmit(event);\n              }}\n            >\n              <div className=\"field\">\n                <label className=\"impactTitle h2Impact\">Login</label>\n                <div className=\"content\"></div>\n                <p className=\"control has-icons-left \">\n                  <input\n                    className=\"input is-medium\"\n                    value={email}\n                    onChange={event => this.genericSync(event)}\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email@ironhack.com\"\n                  />\n                  <span className=\"icon is-small is-left\">\n                    <i className=\"fa fa-envelope\"></i>\n                  </span>\n                </p>\n              </div>\n\n              <div className=\"field\">\n                <p className=\"control has-icons-left\">\n                  <input\n                    className=\"input is-medium\"\n                    value={password} // this.state.password\n                    onChange={event => this.genericSync(event)}\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                  />\n                  <span className=\"icon is-small is-left\">\n                    <i className=\"fa fa-lock\"></i>\n                  </span>\n                </p>\n              </div>\n\n              <div className=\"field\">\n                <p className=\"control\">\n                  <button className=\"button impactButton\">Login</button>\n                </p>\n              </div>\n\n              <div>\n                <p className=\"subtitle is-5\">\n                  Don't have an account?{\" \"}\n                  <Link className=\"impactInlineButton\" to=\"/signup-page\">\n                    Signup\n                  </Link>\n                </p>\n              </div>\n            </form>\n            {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n          </div>\n          {this.state.message && <div> {this.state.message} </div>}\n        </div>\n        {/* </div> */}\n      </section>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction CategoryList(props) {\n  console.log(\"PROPS CATEGORY:\", props);\n  if (!props.currentUser) {\n    // console.log(\">>>>\", props.categoriesFromBackEnd);\n\n    return props.categoriesFromBackEnd.map((oneCat, i) => {\n      return (\n        <div className=\"card column is-3\">\n          <header>\n            <Link\n              key={i}\n              to={{\n                pathname: \"/login-page\"\n              }}\n            >\n              <p className=\"card-header-title is-centered\" key={i}>\n                {oneCat.title}\n              </p>\n            </Link>\n          </header>\n          <div className=\"card-content\">\n            <div className=\"content\">\n              <p key={i}>{oneCat.description}</p>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  } else {\n    return props.categoriesFromBackEnd.map((oneCat, i) => {\n      return (\n        <div className=\"column is-3\">\n          <div className=\"card\">\n            <header className=\"card-header\">\n              <Link\n                {...props}\n                key={i}\n                to={{\n                  pathname: `/category/${oneCat._id}`,\n                  state: {\n                    theId: oneCat._id,\n                    details: oneCat\n                  }\n                }}\n              >\n                <p className=\"card-header-title is-centered\" key={i}>\n                  {oneCat.title}\n                </p>\n              </Link>\n            </header>\n            <div className=\"card-content\">\n              <div className=\"content\">\n                <p key={i}>{oneCat.description}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  }\n}\n\nexport default CategoryList;\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport CategoryList from \"./category-components/CategoryList\";\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAddCategoryForm: false,\n      titleCategory: \"\",\n      descriptionCategory: \"\",\n      categoriesFromBackEnd: this.props.categoriesFromBackEnd\n    };\n  }\n\n  addNewCategory = e => {\n    e.preventDefault();\n\n    let listOfCategories = [...this.props.categoriesFromBackEnd];\n\n    let newCategory = {\n      title: this.state.titleCategory,\n      description: this.state.descriptionCategory,\n      author: this.props.currentUser\n    };\n\n    listOfCategories.unshift(newCategory);\n\n    this.setState({\n      titleCategory: \"\",\n      descriptionCategory: \"\",\n      showAddCategoryForm: false,\n      categoriesList: listOfCategories\n    });\n\n    axios\n      .post(\n        `${process.env.REACT_APP_IMPACT_SERVER}/category/create`,\n        newCategory\n      )\n      .then(newCategory => {\n        this.props.getAllCategories();\n\n        {\n          /* add some success message */\n        }\n      })\n      .catch(err => console.log(\"Error while adding the new Category \", err));\n    console.log(\"Author:\", this.props.currentUser);\n\n    console.log(\"New Category is:\", newCategory);\n  };\n\n  updateInput = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  // toggleForm = () => {\n  //   this.setState({ showAddCategoryForm: !this.state.showAddCategoryForm });\n  // };\n\n  showModal = () => {\n    let displayModal = document.getElementById(\"displayModal\");\n    let modal = document.getElementById(\"modal\");\n    let close = document.getElementsByClassName(\"modal-close\")[0];\n\n    modal.style.display = \"block\";\n    // this.setState({ showAddCategoryForm: !this.state.showAddCategoryForm });\n  };\n\n  closeModal = () => {\n    let modal = document.getElementById(\"modal\");\n    let close = document.getElementsByClassName(\"modal-close\")[0];\n    modal.style.display = \"none\";\n  };\n\n  render() {\n    // this.props.getAllCategories();\n    console.log(\"PROPS HOME PAGE\", this.props);\n    console.log(\"HOME | USER\", this.props.currentUser);\n\n    if (this.props.categoriesFromBackEnd !== null) {\n      // console.log(this.props.currentUser.fullName);\n      // console.log(\"categoriesFromBackEnd: \", this.props.categoriesFromBackEnd);\n      return (\n        <section className=\"hero impactFullheight home-bg-img \">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <div>\n                <p className=\"h1Impact\">Think global | Act Local</p>\n                {/* <p className=\"subtitle is-1\">Act local</p> */}\n              </div>\n\n              <section className=\"section\">\n                <h3 className=\"title h2Impact\">Pick category:</h3>\n\n                <div className=\"columns  is-multiline is-8 is-variable\">\n                  <CategoryList\n                    categoriesFromBackEnd={this.props.categoriesFromBackEnd}\n                    currentUser={this.props.currentUser}\n                    className=\"column\"\n                  />\n                </div>\n              </section>\n              {/* {!this.state.showAddCategoryForm && this.props.currentUser && ( */}\n              <button onClick={this.showModal} className=\"button impactButton\">\n                Add New Category\n              </button>\n              {/* )} */}\n\n              <div className=\"modal\" id=\"modal\">\n                <div className=\"modal-background\"></div>\n                <div className=\"modal-content\">\n                  <div className=\"section formModal\">\n                    <form onSubmit={this.addNewCategory}>\n                      <p className=\"title h2Impact\">Add New Category</p>\n                      <div className=\"field\">\n                        <p className=\"control\">\n                          <input\n                            className=\"input\"\n                            type=\"text\"\n                            name=\"titleCategory\"\n                            placeholder=\"New category title\"\n                            onChange={this.updateInput}\n                            value={this.state.titleCategory}\n                          />\n                        </p>\n                      </div>\n\n                      <div className=\"field\">\n                        <p className=\"control\">\n                          <textarea\n                            className=\"input\"\n                            type=\"textarea\"\n                            name=\"descriptionCategory\"\n                            placeholder=\"New category description\"\n                            onChange={this.updateInput}\n                            value={this.state.descriptionCategory}\n                          />\n                        </p>\n                      </div>\n                      <div className=\"field\">\n                        <button\n                          onClick={this.closeModal}\n                          className=\"button is-primary\"\n                        >\n                          Submit\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                  <button\n                    onClick={this.closeModal}\n                    className=\"modal-close is-large\"\n                    aria-label=\"close\"\n                  ></button>\n                </div>\n              </div>\n\n              {/* {this.state.showAddCategoryForm && (\n                <form onSubmit={this.addNewCategory}>\n                  <p className=\"title is-4\">Add New Category</p>\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"titleCategory\"\n                        placeholder=\"New category title\"\n                        onChange={this.updateInput}\n                        value={this.state.titleCategory}\n                      />\n                    </p>\n                  </div>\n\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <textarea\n                        className=\"input\"\n                        type=\"textarea\"\n                        name=\"descriptionCategory\"\n                        placeholder=\"New category description\"\n                        onChange={this.updateInput}\n                        value={this.state.descriptionCategory}\n                      />\n                    </p>\n                  </div>\n                  <div className=\"field\">\n                    <button className=\"button\">Submit</button>\n                  </div>\n                </form>\n              )} */}\n            </div>\n          </div>\n        </section>\n      );\n    } else\n      return (\n        <button onClick={this.showModal} className=\"button\">\n          Add New Category\n        </button>\n      );\n  }\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      burgerMenuOpen: false\n    };\n  }\n\n  mobileMenu = () => {\n    console.log(\"menu Mobile\");\n    let nav = document.getElementById(\"navMenu\");\n    console.log(nav.classList);\n\n    nav.classList.add(\"is-active\", \"menuMobile\");\n  };\n\n  hideMenu = () => {\n    document.getElementById(\"navMenu\").classList.remove(\"is-active\");\n  };\n\n  render() {\n    console.log(\"-=-=-=-=-=-\", this.props.theUser);\n\n    return (\n      <nav\n        className=\"navbar impactNavbar is-spaced impactNavbar\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"navbar-brand  margin-right\">\n          {/* <p className=\"impactLogo\">IMPACT</p> */}\n          <a\n            className=\"navbar-item\"\n            href=\"https://impact-sustainability.herokuapp.com/\"\n          >\n            <img src=\"/impact_logo.png\" height=\"200\" />\n          </a>\n          <a\n            role=\"button\"\n            onClick={this.mobileMenu}\n            className=\"navbar-burger burger \"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navMenu\"\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n        <div className=\"navbar-menu is-spaced is-transparent\" id=\"navMenu\">\n          <div className=\"navbar-start\">\n            {this.props.theUser && (\n              <div>\n                <NavLink\n                  to=\"/\"\n                  className=\"navbar-item impactNavLinks margin-right\"\n                  onClick={this.hideMenu}\n                >\n                  Home\n                </NavLink>\n                {/* <NavLink to=\"/dashboard\" className=\"navbar-item is-inline\">\n                  Dashboard\n                </NavLink> */}\n                <NavLink\n                  to=\"/profile\"\n                  className=\"navbar-item impactNavLinks margin-right\"\n                  onClick={this.hideMenu}\n                >\n                  Profile\n                </NavLink>\n                {/* <NavLink\n                  to=\"/community\"\n                  className=\"navbar-item impactNavLinks\"\n                  onClick={this.hideMenu}\n                >\n                  Community\n                </NavLink> */}\n              </div>\n            )}\n          </div>\n\n          <div className=\"navbar-end\">\n            {this.props.theUser && (\n              <button\n                onClick={this.props.doLogout}\n                className=\"navbar-item is-inline button is-link is-outlined is-spaced\"\n              >\n                Logout\n              </button>\n            )}\n\n            {!this.props.theUser && (\n              <div>\n                <NavLink\n                  to=\"/login-page\"\n                  className=\"navbar-item is-inline button is-link is-outlined  is-spaced margin-right\"\n                >\n                  Login\n                </NavLink>\n                <NavLink\n                  to=\"/signup-page\"\n                  className=\"navbar-item is-inline button is-link is-outlined is-spaced\"\n                >\n                  {\" \"}\n                  Signup{\" \"}\n                </NavLink>\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport axios from \"axios\";\nimport history from \"../../history\";\nimport { toast } from \"react-toastify\";\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAddActForm: false,\n      titleAct: \"\",\n      descriptionAct: \"\",\n      valueOfAct: \"\",\n      actCategory: \"\",\n      currentCategory: this.props.location.state.details,\n      arrayOfActions: this.props.actionsFromBackEnd.allActs,\n      categoriesFromBackEnd: this.props.categoriesFromBackEnd,\n      showEditCategoryForm: false,\n      suggested: this.props.suggestedActs,\n      // titleCat: this.props.location.state.details.title,\n      // descriptionCat: this.props.location.state.details.description\n      titleCat: \"\",\n      descriptionCat: \"\"\n    };\n  }\n\n  showCategoryDetails = () => {\n    if (this.props.currentUser !== null) {\n      // const currentCategory = this.props.location.state.details;\n      // const this.state.arrayOfActions = this.props.actionsFromBackEnd;\n      const actionsThatMatchedCategory = this.state.arrayOfActions.filter(\n        action => action.category == this.state.currentCategory._id\n      );\n      console.log(\"Current category: \", this.props.location.state.details);\n\n      // console.log(\"^^^^^^^^\", currentCategory);\n      // console.log(\"********\", arrayOfActions);\n      return (\n        <div>\n          <p className=\"title h1Impact\">{this.state.currentCategory.title}</p>\n          <p className=\"subtitle h2Impact\">\n            {this.state.currentCategory.description}\n          </p>\n          <div>\n            <p className=\"title is-4\">Actions:</p>\n            <div className=\"columns  is-multiline is-8 is-variable is-centered\">\n              {actionsThatMatchedCategory.map((singleAction, i) => {\n                console.log(singleAction);\n                return (\n                  <div className=\"column is-3\">\n                    <div className=\"card\" key={i}>\n                      <header className=\"card-header\">\n                        <p className=\"card-header-title\">\n                          {singleAction.title}\n                        </p>\n                        <p className=\"card-score\">{singleAction.value}</p>\n                      </header>\n                      <div className=\"card-content\">\n                        <div className=\"content\">\n                          <p>{singleAction.description} </p>\n                        </div>\n                      </div>\n                      <footer className=\"card-footer is-centered\">\n                        <button\n                          className=\"button  is-fillwidth impactInlineButton\"\n                          onClick={e => {\n                            this.props.getActIdforActNow(singleAction);\n                          }}\n                        >\n                          Act now!\n                        </button>\n                      </footer>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return \"loading\";\n    }\n  };\n\n  // toggleForm = () => {\n  //   this.setState({ showAddActForm: !this.state.showAddActForm });\n  // };\n\n  toggleFormCategory = () => {\n    this.setState({ showEditCategoryForm: !this.state.showEditCategoryForm });\n  };\n\n  handleChange = e => {\n    console.log(\"changing value\", e.target.name, e.target.value);\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  addNewActToDb = e => {\n    e.preventDefault();\n    console.log(\"#####\", this.state);\n    let listOfActions = [...this.state.arrayOfActions];\n\n    let newAct = {\n      title: this.state.titleAct,\n      description: this.state.descriptionAct,\n      value: this.state.valueOfAct,\n      category: this.state.actCategory,\n      author: this.props.currentUser\n    };\n\n    console.log(\"first\", newAct.value);\n    listOfActions.unshift(newAct);\n\n    this.setState({\n      showAddActForm: false,\n      titleAct: \"\",\n      descriptionAct: \"\",\n      valueOfAct: \"\",\n      actCategory: \"\",\n      arrayOfActions: listOfActions\n    });\n\n    console.log(\"second\", listOfActions);\n    axios\n      .post(`${process.env.REACT_APP_IMPACT_SERVER}/act/create`, newAct)\n      .then(newAct => {\n        this.props.getAllActions();\n      })\n      .catch(err => console.log(\"Error while adding the new Act \", err));\n\n    // this.props.getAllActions();\n    toast.success(\"New Action is successfully added!\");\n  };\n\n  //end of functions for 'Add Actions'\n\n  editCategoryInDb = e => {\n    e.preventDefault();\n    if (this.state.currentCategory !== null) {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      let updatedCategory = {\n        _id: this.state.currentCategory._id,\n        title: this.state.titleCat,\n        description: this.state.descriptionCat,\n        author: this.state.currentCategory.author\n      };\n\n      const newListOfCategories = this.state.categoriesFromBackEnd.filter(\n        category => category._id !== this.state.currentCategory._id\n      );\n      newListOfCategories.push(updatedCategory);\n\n      this.setState({\n        showEditCategoryForm: false,\n        titleCat: \"\",\n        descriptionCat: \"\",\n        currentCategory: updatedCategory,\n        categoriesFromBackEnd: newListOfCategories\n      });\n      console.log(\">>>>\", this.state);\n\n      this.props.getCategoryObjforEdit(\n        this.props.location.state.details,\n        updatedCategory\n      );\n    } else {\n      return \"loading category...\";\n    }\n  };\n\n  showModal = () => {\n    let displayModal = document.getElementById(\"displayModal\");\n    let modal = document.getElementById(\"modal\");\n\n    modal.style.display = \"block\";\n    // this.setState({ showAddCategoryForm: !this.state.showAddCategoryForm });\n  };\n\n  closeModal = () => {\n    let modal = document.getElementById(\"modal\");\n    let close = document.getElementsByClassName(\"modal-close\")[0];\n    modal.style.display = \"none\";\n  };\n\n  showModalCategory = () => {\n    let displayModalCategory = document.getElementById(\"displayModalCategory\");\n    let modalCategory = document.getElementById(\"modalCategory\");\n    let close = document.getElementById(\"modal-close\");\n\n    modalCategory.style.display = \"block\";\n    // this.setState({ showAddCategoryForm: !this.state.showAddCategoryForm });\n  };\n\n  closeModalCategory = () => {\n    let modalCategory = document.getElementById(\"modalCategory\");\n    let close = document.getElementById(\"modalCategoryClose\");\n    modalCategory.style.display = \"none\";\n  };\n\n  render() {\n    console.log(\"/////\", this.state.suggested);\n    if (this.props.currentUser !== null) {\n      // console.log(\"Current category\", this.state.currentCategory);\n      // console.log(\"current User:\", this.props.currentUser._id);\n      console.log(\"_________________++__________\");\n\n      console.log(\"CATEGORIES FROM BE\", this.props.categoriesFromBackEnd);\n      return (\n        <section className=\"hero impactFullheight home-bg-img \">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <div>\n                <div>\n                  {/* <p>Category: {this.props.location.state.details.title}</p> */}\n                  {this.showCategoryDetails()}\n                  <div>\n                    {/* start of Add Action */}\n\n                    {/* {!this.state.showAddActForm && ( */}\n                    <button\n                      className=\"button impactButton\"\n                      onClick={this.showModal}\n                    >\n                      Add New Action\n                    </button>\n\n                    {/* {this.state.showAddActForm && ( */}\n                    <div className=\"modal\" id=\"modal\">\n                      <div className=\"modal-background\"></div>\n                      <div className=\"modal-content\">\n                        <div className=\"section formModal\">\n                          <form onSubmit={this.addNewActToDb}>\n                            <p className=\"title h2Impact\">Add New Action</p>\n\n                            <div className=\"field\">\n                              <p className=\"control\">\n                                <input\n                                  className=\"input\"\n                                  type=\"text\"\n                                  name=\"titleAct\"\n                                  placeholder=\"Name new action\"\n                                  value={this.state.titleAct}\n                                  onChange={this.handleChange}\n                                />\n                              </p>\n                            </div>\n\n                            <div className=\"field\">\n                              <p className=\"control\">\n                                <input\n                                  className=\"input\"\n                                  type=\"text\"\n                                  name=\"descriptionAct\"\n                                  placeholder=\"Describe new action\"\n                                  value={this.state.descriptionAct}\n                                  onChange={this.handleChange}\n                                />\n                              </p>\n                            </div>\n\n                            <div className=\"field\">\n                              <p className=\"control\">\n                                <input\n                                  className=\"input\"\n                                  type=\"number\"\n                                  name=\"valueOfAct\"\n                                  placeholder=\"How many points its worth?\"\n                                  min=\"0\"\n                                  value={this.state.valueOfAct}\n                                  onChange={this.handleChange}\n                                />\n                              </p>\n                            </div>\n\n                            <div className=\"field\">\n                              <p className=\"control\">\n                                <span className=\"select  is-fullwidth\">\n                                  <select\n                                    name=\"actCategory\"\n                                    onChange={this.handleChange}\n                                  >\n                                    <option className=\"option\" value=\"0\">\n                                      Pick category\n                                    </option>\n                                    {this.props.categoriesFromBackEnd.map(\n                                      oneCategory => {\n                                        return (\n                                          <option\n                                            // value={oneCategory._id}\n                                            value={oneCategory._id}\n                                            key={oneCategory._id}\n                                          >\n                                            {oneCategory.title}\n                                          </option>\n                                        );\n                                      }\n                                    )}\n                                  </select>\n                                </span>\n                              </p>\n                            </div>\n\n                            <div className=\"block\">\n                              <p className>\n                                <button\n                                  onClick={this.closeModal}\n                                  className=\"button is-primary\"\n                                >\n                                  Submit\n                                </button>\n                              </p>\n                            </div>\n                          </form>\n                        </div>\n                        <button\n                          onClick={this.closeModal}\n                          // id=\"modal-close\"\n                          className=\" modal-close is-large\"\n                          aria-label=\"close\"\n                        ></button>\n                      </div>\n\n                      {/* )} */}\n                    </div>\n                    {/* end of Add action */}\n\n                    <div className=\"column is-4 is-offset-4\">\n                      {this.state.currentCategory.author ===\n                        this.props.currentUser._id && (\n                        <div className=\"columns\">\n                          <div className=\"column\">\n                            {/* {!this.state.showEditCategoryForm && ( */}\n                            <button\n                              className=\"button is-link is-inverted\"\n                              onClick={this.showModalCategory}\n                            >\n                              Edit Category\n                            </button>\n\n                            {/* {this.state.showEditCategoryForm &&\n                              this.props.location.state.details && ( */}\n                            <div className=\"modal\" id=\"modalCategory\">\n                              <div className=\"modal-background\"></div>\n                              <div className=\"modal-content\">\n                                <div className=\"section formModal\">\n                                  <form onSubmit={this.editCategoryInDb}>\n                                    <p className=\"title h2Impact\">\n                                      Edit {this.state.currentCategory.title}\n                                    </p>\n\n                                    <div className=\"field\">\n                                      <p className=\"control\">\n                                        <input\n                                          className=\"input\"\n                                          type=\"text\"\n                                          name=\"titleCat\"\n                                          placeholder={\n                                            this.state.currentCategory.title\n                                          }\n                                          onChange={this.handleChange}\n                                          value={this.state.titleCat}\n                                        />\n                                      </p>\n                                    </div>\n\n                                    <div className=\"field\">\n                                      <p className=\"control\">\n                                        <textarea\n                                          className=\"input\"\n                                          type=\"textarea\"\n                                          name=\"descriptionCat\"\n                                          placeholder={\n                                            this.state.currentCategory\n                                              .description\n                                          }\n                                          value={this.state.descriptionCat}\n                                          onChange={this.handleChange}\n                                        />\n                                      </p>\n                                    </div>\n\n                                    <div className=\"field\">\n                                      <button\n                                        onClick={this.closeModalCategory}\n                                        className=\"button is-primary\"\n                                      >\n                                        Save changes\n                                      </button>\n                                    </div>\n                                  </form>\n                                </div>\n                                <button\n                                  onClick={this.closeModalCategory}\n                                  className=\" modal-close is-large\"\n                                  // id=\"modalCategoryClose\"\n                                  aria-label=\"close\"\n                                ></button>\n                              </div>\n                            </div>\n                            {/* )} */}\n                          </div>\n\n                          <div className=\"column\">\n                            <button\n                              className=\"button is-link is-inverted\"\n                              onClick={() => {\n                                this.props.getCategoryObjforDelete(\n                                  this.props.location.state.details\n                                );\n                              }}\n                            >\n                              Delete Category{\" \"}\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      );\n    } else {\n      // console.log(\"PROPS IN DETAILS PAGE:\", this.props);\n      // this.props.history.push(\"/\");\n      // return this.props.history.push(\"/\");\n      return history.push(\"/\");\n    }\n  }\n}\n\n//WITHOUT PARAMETERS\n{\n  /* <button onClick={this.function}></button> */\n}\n\n//WITH PARAMETERS\n{\n  /* <button onClick={e => this.function(parameterGoesHere)}></button> */\n}\n\n// export { handleChangeAct };\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zipCode: \"\",\n      householdSize: \"\",\n      income: \"\",\n      placeType: \"\",\n      total: \"\",\n      houseArea: \"\",\n      waterWage: \"\",\n      milesAYear: \"\",\n      mpg: \"\",\n      shoppingServices: \"\",\n      shoppingMeatFishEggs: \"\",\n      suggested: this.props.suggestedActs,\n\n      categories: this.props.categoriesFromBackEnd,\n      currentUser: this.props.currentUser,\n      score: \"\",\n      showUpdatedScore: false\n\n      // completedActs: this.props.currentUser.completedActs\n    };\n  }\n\n  componentDidMount() {\n    let theUser = this.props.getTheUser();\n    // let suggested = [...this.props.suggestedActs];\n\n    this.setState({\n      currentUser: theUser\n    });\n  }\n\n  handleChange = e => {\n    e.preventDefault();\n    this.setState({ [e.target.name]: e.target.value });\n    console.log(\"State is:\", this.state);\n  };\n\n  toggleForm = () => {\n    this.setState({ detailsUnfolded: !this.state.detailsUnfolded });\n  };\n\n  profileQueryStart = e => {\n    e.preventDefault();\n    // console.log(\"ROUTE:\", process.env.REACT_API_COOLCLIMATE);\n\n    let newQuery =\n      // \"http://apis.berkeley.edu/coolclimate/footprint-defaults/?\" +\n      \"&input_location_mode=1&input_location=\" +\n      `${this.state.zipCode}` +\n      \"&input_income=\" +\n      `${this.state.income}` +\n      \"&input_size=\" +\n      `${this.state.householdSize}` +\n      \"&op=get_defaults_and_results\";\n    console.log(\"QUERY IS:\", newQuery);\n\n    axios\n      .post(`${process.env.REACT_APP_IMPACT_SERVER}/profile/start`, newQuery)\n      .then(responseFromBackEnd => {\n        console.log(\"Response is:\", responseFromBackEnd.data);\n        this.setState({\n          total: responseFromBackEnd.data.total,\n          // zipCode: \"\",\n          // householdSize: \"\",\n          // income: \"\",\n          // placeType: \"\",\n          // houseArea: \"\",\n          // waterWage: \"\",\n          milesAYear: \"\",\n          mpg: \"\",\n          shoppingServices: \"\",\n          shoppingMeatFishEggs: \"\",\n          suggestedActs: this.props.currentUser.suggestedActs\n        });\n      })\n      .catch(err => console.log(\"Error while getting data from CC\", err));\n  };\n\n  profileQueryHousehold = e => {\n    e.preventDefault();\n    let newQuery =\n      // \"http://apis.berkeley.edu/coolclimate/footprint-defaults/?\" +\n      \"&input_location_mode=1&input_location=\" +\n      `${this.state.zipCode}` +\n      \"&input_income=\" +\n      `${this.state.income}` +\n      \"&input_size=\" +\n      `${this.state.householdSize}` +\n      \"&input_footprint_housing_squarefeet=\" +\n      `${this.state.houseArea}` +\n      \"&input_footprint_housing_watersewage=\" +\n      `${this.state.waterWage}` +\n      \"&op=get_defaults_and_results\";\n    console.log(\"Household Query is:\", newQuery);\n  };\n\n  carbonFootprintGrade = () => {\n    if (this.state.total) {\n      if (this.state.total < 20) {\n        return \"'A', Awesome job! Keep it up\";\n      } else if (this.state.total < 30) {\n        return (\n          <div>\n            <p>'B'</p>\n            <p className=\"\">\n              Doing great. See Suggested Acts to get even better!\n            </p>\n          </div>\n        );\n      } else if (this.state.total < 40) {\n        return \"'C', You can do better. See Suggested Acts\";\n      } else if (this.state.total === \"\") {\n        return \" \";\n      }\n    }\n  };\n\n  showDetails = () => {\n    console.log(\"Current User\", this.state.currentUser);\n\n    // console.log(\"Completed 2 :\", this.props.currentUser.completedActs);\n    // console.log(\"All acts :\", this.props.actionsFromBackEnd.allActs);\n    let completedWhole = [];\n    for (let i = 0; i < this.props.actionsFromBackEnd.allActs.length; i++) {\n      for (let y = 0; y < this.props.currentUser.completedActs.length; y++) {\n        if (\n          this.props.actionsFromBackEnd.allActs[i]._id ===\n          this.props.currentUser.completedActs[y]\n        ) {\n          completedWhole.unshift(this.props.actionsFromBackEnd.allActs[i]);\n        }\n      }\n    }\n\n    console.log(\"Completed after filter>>>\", completedWhole);\n    {\n      return completedWhole.map((singleAction, i) => {\n        return (\n          <div className=\"column is-one-quarter\">\n            <div className=\"card\" key={i}>\n              <header className=\"card-header\">\n                <p className=\"card-header-title  is-centered\">\n                  {singleAction.title}\n                </p>\n                <p className=\"card-header-title is-centered\">\n                  {singleAction.value}\n                </p>\n              </header>\n              <div className=\"card-content\">\n                <div className=\"content\">\n                  <p>{singleAction.description}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      });\n    }\n  };\n\n  handleActNow = singleAct => {\n    if (this.props.currentUser && this.props.suggestedActs) {\n      this.props.getActIdforActNow(singleAct._id);\n      console.log(\"Pressed Act Value\", singleAct.value);\n      console.log(\"Score is before act:\", this.props.currentUser.score);\n      let updatedScore = this.props.currentUser.score + singleAct.value;\n      console.log(\"Updated score: \", updatedScore);\n      console.log(\"SINGLE ACT ID\", singleAct._id);\n\n      let newSuggestedActs = this.props.currentUser.suggestedActs.filter(\n        act => act._id !== singleAct._id\n      );\n      console.log(\"Old Suggested acts: \", this.props.currentUser.suggestedActs);\n      console.log(\"New Suggested acts: \", newSuggestedActs);\n\n      // const finalActs = this.state.treatedSuggestedActs.filter(\n      //   oneAct => oneAct._id !== singleAct._id\n      // );\n      this.props.getActIdforActNow(singleAct);\n\n      this.setState({\n        score: updatedScore,\n        showUpdatedScore: true,\n        suggested: newSuggestedActs\n      });\n    }\n  };\n\n  openTab = (e, tabId) => {\n    console.log(\"Tab id is.......\", tabId);\n    let tabcontent = document.getElementsByClassName(\"tabcontent\");\n    for (let i = 0; i < tabcontent.length; i++) {\n      tabcontent[i].style.display = \"none\";\n    }\n\n    let tablink = document.getElementsByClassName(\"tablink\");\n    console.log(\",,,,,,,,,,,,,\", tablink[0].innerText);\n    for (let i = 0; i < tablink.length; i++) {\n      tablink[i].className = tablink[i].className.replace(\"is-active\", \"\");\n    }\n\n    e.currentTarget.className += \" is-active\";\n    // console.log(\"LLLLLL\", document.getElementById(tabId));\n    // console.log(\"PPPP\", tabId);\n    let thisBlock = document.getElementById(tabId);\n    console.log(\"this block\", thisBlock);\n    // tabId.nextSibling.className += \"is-active\";\n    document.getElementById(tabId).style.display = \"block\";\n  };\n\n  showModal = () => {\n    let displayModal = document.getElementById(\"displayModal\");\n    let modal = document.getElementById(\"modal\");\n    let close = document.getElementsByClassName(\"modal-close\")[0];\n\n    modal.style.display = \"block\";\n  };\n\n  closeModal = () => {\n    let modal = document.getElementById(\"modal\");\n    let close = document.getElementsByClassName(\"modal-close\")[0];\n    modal.style.display = \"none\";\n  };\n\n  render() {\n    console.log(\"!!STATE: \", this.state);\n    console.log(\"!!PROPS:\", this.props);\n\n    if (this.props.currentUser !== null) {\n      // console.log(\"Completed:\", this.props.currentUser.completedActs);\n\n      console.log(\"************\", this.props.suggestedActs);\n      // console.log(\"############\", this.state.suggestedActs);\n\n      let suggestedActs = this.props.suggestedActs.slice(0, 4);\n      console.log(\"%%%%%%%%%%%%%%\", suggestedActs);\n\n      console.log(\"<<<<<<<<<<<<<<<<\", this.state.suggested);\n\n      return (\n        <section className=\"hero impactFullheight home-bg-img\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <div>\n                <p className=\"subtitle is-1 h1Impact\">\n                  Hi, {this.props.currentUser.fullName}\n                </p>\n              </div>\n\n              <section className=\"section\">\n                <div className=\"columns\">\n                  <div className=\"column is-two-fifths is-offset-1\">\n                    <div className=\"tabs is-centered is-toggle is-fullwidth tabImpact\">\n                      <ul>\n                        <li\n                          className=\"tablink is-active\"\n                          onClick={e => this.openTab(e, \"start\")}\n                        >\n                          <a>\n                            <span className=\"icon is-small\">\n                              <i\n                                className=\"fa fa-sign-in\"\n                                aria-hidden=\"true\"\n                              ></i>\n                            </span>\n                            <span>Start</span>\n                          </a>\n                        </li>\n                        <li\n                          className=\"tablink\"\n                          onClick={e => this.openTab(e, \"household\")}\n                        >\n                          <a>\n                            <span className=\"icon is-small\">\n                              <i className=\"fa fa-home\" aria-hidden=\"true\"></i>\n                            </span>\n                            <span>Household</span>\n                          </a>\n                        </li>\n                        <li\n                          className=\"tablink\"\n                          onClick={e => this.openTab(e, \"commute\")}\n                        >\n                          <a>\n                            <span className=\"icon is-small\">\n                              <i className=\"fa fa-car\" aria-hidden=\"true\"></i>\n                            </span>\n                            <span>Commute</span>\n                          </a>\n                        </li>\n                        <li\n                          className=\"tablink\"\n                          onClick={e => this.openTab(e, \"shop\")}\n                        >\n                          <a>\n                            <span className=\"icon is-small\">\n                              <i\n                                className=\"fa fa-shopping-bag\"\n                                aria-hidden=\"true\"\n                              ></i>\n                            </span>\n                            <span>Shopping</span>\n                          </a>\n                        </li>\n                      </ul>\n                    </div>\n                    <form onSubmit={this.profileQueryStart}>\n                      <div id=\"start\" className=\"tabcontent\">\n                        <h1 className=\"h4Impact\">Let's get started!</h1>\n\n                        <div>\n                          <div className=\"field \">\n                            <p className=\"control has-icons-left \">\n                              <input\n                                className=\"input\"\n                                type=\"text\"\n                                name=\"zipCode\"\n                                placeholder=\"Type your zip-code\"\n                                onChange={this.handleChange}\n                                value={this.state.zipCode}\n                              />\n                              <span className=\"icon is-small is-left\">\n                                <i className=\"fa fa-globe\"></i>\n                              </span>\n                            </p>\n                          </div>\n\n                          <div className=\"field\">\n                            {/* <label className=\"label\">Do you live in:</label> */}\n                            <p className=\"control has-icons-left is-medium\">\n                              <span className=\"select  is-fullwidth\">\n                                <select\n                                  name=\"income\"\n                                  onChange={this.handleChange}\n                                >\n                                  <option selected className=\"option\" value=\"1\">\n                                    What is your average annual income?\n                                  </option>\n                                  <option className=\"option\" value=\"2\">\n                                    Less than $10,000\n                                  </option>\n                                  <option className=\"option\" value=\"3\">\n                                    $10,000 to $19,999\n                                  </option>\n                                  <option className=\"option\" value=\"4\">\n                                    $20,000 to $29,999\n                                  </option>\n                                  <option className=\"option\" value=\"5\">\n                                    $30,000 to $39,999\n                                  </option>\n                                  <option className=\"option\" value=\"6\">\n                                    $40,000 to $49,999\n                                  </option>\n                                  <option className=\"option\" value=\"7\">\n                                    $50,000 to $59,999\n                                  </option>\n                                  <option className=\"option\" value=\"8\">\n                                    $60,000 to $79,999\n                                  </option>\n                                  <option className=\"option\" value=\"9\">\n                                    $80,000 to $99,999\n                                  </option>\n                                  <option className=\"option\" value=\"10\">\n                                    $100,000 to $119,999\n                                  </option>\n                                  <option className=\"option\" value=\"11\">\n                                    $120,000 or more\n                                  </option>\n                                </select>\n                              </span>\n                              <span class=\"icon is-small is-left\">\n                                <i class=\"fa fa-magic\"></i>\n                              </span>\n                            </p>\n                          </div>\n\n                          <div className=\"field\">\n                            {/* <label className=\"label\">Do you live in:</label> */}\n                            <p className=\"control has-icons-left\">\n                              <span className=\"select  is-fullwidth\">\n                                <select\n                                  name=\"householdSize\"\n                                  onChange={this.handleChange}\n                                >\n                                  <option selected className=\"option\" value=\"1\">\n                                    How many people live in your household?\n                                  </option>\n                                  <option className=\"option\" value=\"1\">\n                                    1 person\n                                  </option>\n                                  <option className=\"option\" value=\"2\">\n                                    2 people\n                                  </option>\n                                  <option className=\"option\" value=\"3\">\n                                    3 people\n                                  </option>\n                                  <option className=\"option\" value=\"4\">\n                                    4 people\n                                  </option>\n                                  <option className=\"option\" value=\"5\">\n                                    5 or more people\n                                  </option>\n                                </select>\n                              </span>\n                              <span class=\"icon is-small is-left\">\n                                <i class=\"fa fa-users\"></i>\n                              </span>\n                            </p>\n                          </div>\n                        </div>\n\n                        <div className=\"block\"></div>\n                        <div className=\"block\">\n                          <p className>\n                            <button\n                              className=\"button is-link is-outlined\"\n                              onClick={e => this.openTab(e, \"household\")}\n                            >\n                              Next\n                            </button>\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"tabcontent\" id=\"household\">\n                        <p className=\"h4Impact\">Household Details</p>\n                        <div>\n                          <div className=\"field \">\n                            <p className=\"control\">\n                              <input\n                                className=\"input\"\n                                type=\"text\"\n                                name=\"houseArea\"\n                                placeholder=\"Your House area in Sq Ft\"\n                                onChange={this.handleChange}\n                                value={this.state.houseArea}\n                              />\n                            </p>\n                          </div>\n\n                          {/* <input_footprint_housing_watersewage> */}\n\n                          <div className=\"field \">\n                            <p>\n                              <input\n                                className=\"input\"\n                                type=\"text\"\n                                name=\"waterWage\"\n                                placeholder=\"What is your average Water Wage\"\n                                onChange={this.handleChange}\n                                value={this.state.waterWage}\n                              />\n                            </p>\n                          </div>\n\n                          <div className=\"columns\">\n                            <div className=\"column\">\n                              <button\n                                className=\"button is-link is-outlined\"\n                                onClick={e => this.openTab(e, \"start\")}\n                              >\n                                Previous\n                              </button>\n                            </div>\n\n                            <div className=\"column\">\n                              <button\n                                className=\"button is-link is-outlined\"\n                                onClick={e => this.openTab(e, \"commute\")}\n                              >\n                                Next\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"tabcontent\" id=\"shop\">\n                        <p className=\"h4Impact\">Shopping</p>\n                        <div>\n                          {/* <input_footprint_housing_watersewage> */}\n\n                          <div className=\"field \">\n                            <p>\n                              <input\n                                className=\"input\"\n                                type=\"number\"\n                                name=\"shoppingServices\"\n                                placeholder=\"$/yr total services\"\n                                onChange={this.handleChange}\n                                value={this.state.shoppingServices}\n                              />\n                            </p>\n                          </div>\n\n                          <div className=\"field \">\n                            <p>\n                              <input\n                                className=\"input\"\n                                type=\"number\"\n                                name=\"shoppingMeatFishEggs\"\n                                placeholder=\"$/yr total on meat, fish, eggs\"\n                                onChange={this.handleChange}\n                                value={this.state.shoppingMeatFishEggs}\n                              />\n                            </p>\n                          </div>\n\n                          <div className=\"columns\">\n                            <div className=\"column\">\n                              <button\n                                className=\"button is-link is-outlined\"\n                                onClick={e => this.openTab(e, \"commute\")}\n                              >\n                                Previous\n                              </button>\n                            </div>\n\n                            <div className=\"column\">\n                              <button className=\"button impactButton\">\n                                Submit\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"tabcontent\" id=\"commute\">\n                        <p className=\"h4Impact\">Commute</p>\n                        <div>\n                          <div className=\"field \">\n                            <p className=\"control\">\n                              <input\n                                className=\"input\"\n                                type=\"text\"\n                                name=\"milesAYear\"\n                                placeholder=\"The number of miles your vehicle travels in a year\"\n                                onChange={this.handleChange}\n                                value={this.state.milesAYear}\n                              />\n                            </p>\n                          </div>\n\n                          <div>\n                            <div className=\"field \">\n                              <p className=\"control\">\n                                <input\n                                  className=\"input\"\n                                  type=\"text\"\n                                  name=\"mpg\"\n                                  placeholder=\"Your vehicle's fuel efficiency in miles per gallon\"\n                                  onChange={this.handleChange}\n                                  value={this.state.mpg}\n                                />\n                              </p>\n                            </div>\n\n                            <div className=\"columns\">\n                              <div className=\"column\">\n                                <button\n                                  className=\"button is-link is-outlined\"\n                                  onClick={e => this.openTab(e, \"household\")}\n                                >\n                                  Previous\n                                </button>\n                              </div>\n\n                              <div className=\"column\">\n                                <button\n                                  className=\"button is-link is-outlined\"\n                                  onClick={e => this.openTab(e, \"shopping\")}\n                                >\n                                  Next\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"column\">\n                    {this.state.total && (\n                      <div>\n                        <p className=\"h4Impact\">\n                          Household footprint is{\" \"}\n                          <b className=\"has-text-grey-darker\">\n                            {this.state.total}\n                          </b>{\" \"}\n                          tons CO<sup>2</sup>eq/year\n                        </p>\n                        <p className=\"h5Impact\">\n                          Your grade is:{\" \"}\n                          <b className=\"has-text-grey-darker\">\n                            {this.carbonFootprintGrade()}\n                          </b>\n                        </p>\n                      </div>\n                    )}\n\n                    {this.state.showUpdatedScore == false && (\n                      <p className=\"h5Impact\">\n                        Your score is{\" \"}\n                        <b className=\"has-text-grey-darker\">\n                          {this.props.currentUser.score}\n                        </b>\n                      </p>\n                    )}\n\n                    {this.state.showUpdatedScore == true && (\n                      <p className=\"impactTitle title is-6\">\n                        Your score is {this.state.score}\n                      </p>\n                    )}\n\n                    <button\n                      onClick={this.showModal}\n                      className=\"button is-link is-outlined\"\n                    >\n                      View Details\n                    </button>\n                  </div>\n\n                  <div className=\"modal \" id=\"modal\">\n                    <div className=\"modal-background\"></div>\n                    <div className=\"modal-card impactModal\">\n                      <header className=\"modal-card-head\">\n                        <p className=\"modal-card-title\">\n                          Your score is {this.props.currentUser.score}\n                        </p>\n\n                        <button\n                          class=\"delete\"\n                          onClick={this.closeModal}\n                          aria-label=\"close\"\n                        ></button>\n                      </header>\n                      <div className=\"section modal-card-body\">\n                        <div>\n                          {\" \"}\n                          <p className=\"impactTitle title is-5\">\n                            Completed acts:\n                          </p>\n                          <div className=\"columns is-multiline\">\n                            {this.showDetails()}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <p className=\"h2Impact\">Suggested Acts:</p>\n                  <div className=\"columns  is-8 is-offset-1 is-centered\">\n                    {suggestedActs.map((singleAct, i) => {\n                      return (\n                        <div className=\"column is-3\">\n                          <div className=\"card\" key={i}>\n                            <header className=\"card-header\">\n                              <p className=\"card-header-title\">\n                                {singleAct.title}\n                              </p>\n                              <p className=\"card-score\">{singleAct.value}</p>\n                            </header>\n                            <div className=\"card-content\">\n                              <div className=\"content\">\n                                <p>{singleAct.description} </p>\n                              </div>\n                            </div>\n                            <footer className=\"card-footer is-centered\">\n                              <button\n                                className=\"button  is-fillwidth impactInlineButton\"\n                                onClick={e => {\n                                  this.props.getActIdforActNow(singleAct);\n                                }}\n                              >\n                                Act now!\n                              </button>\n                            </footer>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              </section>\n            </div>\n          </div>\n        </section>\n      );\n    } else return \"loading...\";\n  }\n}\n\nexport default Profile;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Profile from \"./Profile\";\n// import { Link } from \"react-router-dom\";\n// import { handleChangeAct } from \"../category-components/CategoryDetails\";\n\nclass Dashbord extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // treatedSuggestedActs: null,\n      detailsUnfolded: false,\n      completedActs: this.props.completedActs,\n      categoriesFromBackEnd: this.props.categoriesFromBackEnd,\n      currentUser: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let theUser = this.props.getTheUser();\n    this.setState({\n      currentUser: theUser\n    });\n  }\n\n  // componentDidMount() {\n  //   let userSuggestedActs = [];\n  //   // console.log(\"1.-=-=-=-=-=\", this.state.suggestedActs[1]);\n  //   // console.log(\"2.-=-=-=-=-=\", this.props.actionsFromBackEnd.allActs[1]._id);\n  //   for (let i = 0; i < this.props.currentUser.suggestedActs.length; i++) {\n  //     for (let y = 0; y < this.props.actionsFromBackEnd.allActs.length; y++) {\n  //       if (\n  //         this.props.actionsFromBackEnd.allActs[y]._id ===\n  //         this.props.currentUser.suggestedActs[i]\n  //       ) {\n  //         userSuggestedActs.unshift(this.props.actionsFromBackEnd.allActs[y]);\n  //         // console.log(\"3.-=-=-=-=-=\", userSuggestedActs);\n  //       }\n  //     }\n  //   }\n  //   // console.log(\"****\", userSuggestedActs);\n  //   for (let i = 0; i < userSuggestedActs.length; i++) {\n  //     for (let y = 0; y < this.state.categoriesFromBackEnd.length; y++) {\n  //       if (\n  //         userSuggestedActs[i].category ===\n  //         this.state.categoriesFromBackEnd[y]._id\n  //       ) {\n  //         console.log(\"BLA-BLA-BLA\");\n  //         console.log(\"Title is :\", this.state.categoriesFromBackEnd[y].title);\n  //         // userSuggestedActs[1].category = `${this.state.categoriesFromBackEnd[y].title}`;\n  //         let withCategoryTitles = {};\n  //       }\n  //     }\n  //   }\n  //   // console.log(\"+++++\", userSuggestedActs);\n\n  //   console.log(\"Category Name?: \", userSuggestedActs);\n\n  //   this.setState(\n  //     {\n  //       treatedSuggestedActs: userSuggestedActs\n  //     },\n  //     () => console.log(\"####\", this.state.treatedSuggestedActs)\n  //   );\n  // }\n\n  // getLessSuggestedActs = () => {\n  //   // this.actTreatment();\n  //   console.log(\"All\", this.state.treatedSuggestedActs);\n  //   if (this.state.treatedSuggestedActs !== null) {\n  //     // const fourActs = this.state.treatedSuggestedActs.slice(0, 4);\n  //     // console.log(\"4:\", fourActs);\n\n  //     console.log(\"cut suggested acts:\", this.state.treatedSuggestedActs);\n\n  //     return (\n  //       <div>\n  //         <p>Suggested Acts:</p>\n  //         {this.state.treatedSuggestedActs\n  //           .filter((singledSuggestedAct, i) => i < 5)\n  //           .map((singledSuggestedAct, i) => {\n  //             return (\n  //               <div>\n  //                 <h4>\n  //                   <b>{singledSuggestedAct.title}</b>{\" \"}\n  //                 </h4>\n  //                 <p>{singledSuggestedAct.value}</p>\n\n  //                 <p>{singledSuggestedAct.description}</p>\n  //                 <button\n  //                   onClick={e => {\n  //                     this.handleChangeAct(singledSuggestedAct._id);\n  //                   }}\n  //                 >\n  //                   Act Now!\n  //                 </button>\n  //               </div>\n  //             );\n  //           })}\n  //         {/* <button onClick={this.getAllSuggestedActs}>\n  //           View All suggested Acts\n  //         </button> */}\n  //       </div>\n  //     );\n  //   }\n  // };\n\n  handleChangeAct = actId => {\n    console.log(\"SUGGESTED ACTS IN DASHBOARD:\", this.props.suggestedActs);\n    if (this.state.treatedSuggestedActs !== null) {\n      const finalActs = this.state.treatedSuggestedActs.filter(\n        singleAct => singleAct._id !== actId\n      );\n\n      // how to get the value of the act? than update the score\n      const currentAct = this.state.treatedSuggestedActs.filter(\n        singleAct => singleAct._id === actId\n      );\n\n      console.log(\"SCORE\", this.state.score);\n      const updateScore = currentAct[0].value + this.state.score;\n      console.log(\"To add\", updateScore);\n      axios\n        .post(\n          `${process.env.REACT_APP_IMPACT_SERVER}/act/${actId}/update`,\n          {},\n          {\n            withCredentials: true\n          }\n        )\n\n        .then(() => {\n          this.setState({\n            treatedSuggestedActs: finalActs,\n            score: updateScore\n          });\n        })\n        .catch(err => console.log(\"Error while click on `Act Now`\", err));\n    }\n  };\n\n  // getAllSuggestedActs = () => {\n  // console.log(\"MOREEEEEEE\");\n  // return (\n  // <h2>MORE</h2>\n  // <div>\n  //   {this.state.treatedSuggestedActs\n  //     .filter((singledSuggestedAct, i) => i > 4)\n  //     .map((singledSuggestedAct, i) => {\n  //       return (\n  //         <div>\n  //           <h4>\n  //             <b>{singledSuggestedAct.title}</b> {singledSuggestedAct.value}\n  //           </h4>\n  //           <p>{singledSuggestedAct.category}</p>\n  //           <button>Act Now!</button>\n  //         </div>\n  //       );\n  //     })}\n  //   <button onClick={this.getAllSuggestedActs}>Hide</button>\n  // </div>\n  //   );\n  // };\n\n  handleViewDetails = () => {\n    this.setState({\n      detailsUnfolded: true\n    });\n    return (\n      <div>\n        <p>Completed acts:</p>\n        {this.props.currentUser.completedActs.map((singleAction, i) => {\n          return (\n            <div key={i}>\n              <p>\n                {singleAction}\n                {singleAction.title} {singleAction.value}\n                {singleAction.category}\n              </p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  toggleForm = () => {\n    this.setState({ detailsUnfolded: !this.state.detailsUnfolded });\n  };\n\n  // const actionsThatMatchedCategory = this.state.arrayOfActions.filter(\n  //   action => action.category === this.state.currentCategory._id\n  // );\n\n  showModal = () => {\n    let displayModal = document.getElementById(\"displayModal\");\n    let modal = document.getElementById(\"modal\");\n    let close = document.getElementsByClassName(\"modal-close\")[0];\n\n    modal.style.display = \"block\";\n  };\n\n  closeModal = () => {\n    let modal = document.getElementById(\"modal\");\n    let close = document.getElementsByClassName(\"modal-close\")[0];\n    modal.style.display = \"none\";\n  };\n\n  render() {\n    console.log(\n      \"Dashboard suggested acts:\",\n      this.props.currentUser.suggestedActs\n    );\n    if (this.props.currentUser !== null) {\n      // console.log(\">>>>>>>>>>>>>>>>>>\", this.state.treatedSuggestedActs);\n      // console.log(\"PROPS IN:\", this.props);\n      // console.log(\"User:\", this.props.currentUser);\n\n      return (\n        <section className=\"hero is-medium\">\n          <div className=\"hero-body\">\n            <div className=\"block\">\n              <p className=\"subtitle is-1\">\n                Hi there, {this.props.currentUser.fullName}\n              </p>\n            </div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <Profile />\n              </div>\n              <div className=\"column\">\n                <h4 className=\"impactTitle title is-4\">\n                  Your Score is: {this.props.currentUser.score}\n                </h4>\n                {!this.state.detailsUnfolded &&\n                  this.props.currentUser.score < 0 && (\n                    <button onClick={this.toggleForm}>View Details</button>\n                  )}\n                {this.state.detailsUnfolded && (\n                  <div>\n                    <p>Completed acts:</p>\n                    {this.props.currentUser.suggestedActs.map(singleAction => {\n                      return (\n                        <div>\n                          <div key={singleAction._id}>\n                            <b>{singleAction.title}</b> {singleAction.value}\n                          </div>\n                        </div>\n                      );\n                    })}\n                    <button onClick={this.toggleForm}>Show Less</button>\n                  </div>\n                )}\n                <p>________________________________</p>\n                <p>Suggested Acts:</p>\n                {this.props.currentUser.suggestedActs.map(singleAct => {\n                  return (\n                    <div>\n                      <div key={singleAct._id}>\n                        {singleAct.title}\n                        <br />\n                        {singleAct.value}\n                        <br />\n                        {singleAct.category.title}\n                        <p>____________</p>\n                        <br />\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          <div>\n            <p>________________MODAL________________</p>\n            <button\n              onClick={this.showModal}\n              className=\"button is-large is-primary\"\n              id=\"displayModal\"\n            >\n              Open Modal\n            </button>\n\n            <div className=\"modal\" id=\"modal\">\n              <div className=\"modal-background\"></div>\n              <div className=\"modal-content\">\n                <div className=\"section formModal\">\n                  <form onSubmit={this.addNewActToDb}>\n                    <p className=\"title is-4\">Add New Action</p>\n\n                    <div className=\"field\">\n                      <p className=\"control\">\n                        <input\n                          className=\"input\"\n                          type=\"text\"\n                          name=\"titleAct\"\n                          placeholder=\"Name new action\"\n                          value={this.state.titleAct}\n                          onChange={this.handleChange}\n                        />\n                      </p>\n                    </div>\n\n                    <div className=\"field\">\n                      <p className=\"control\">\n                        <input\n                          className=\"input\"\n                          type=\"text\"\n                          name=\"descriptionAct\"\n                          placeholder=\"Describe new action\"\n                          value={this.state.descriptionAct}\n                          onChange={this.handleChange}\n                        />\n                      </p>\n                    </div>\n\n                    <div className=\"field\">\n                      <p className=\"control\">\n                        <input\n                          className=\"input\"\n                          type=\"number\"\n                          name=\"valueOfAct\"\n                          placeholder=\"How many points its worth?\"\n                          min=\"0\"\n                          value={this.state.valueOfAct}\n                          onChange={this.handleChange}\n                        />\n                      </p>\n                    </div>\n\n                    <div className=\"field\">\n                      <p className=\"control\">\n                        <span className=\"select  is-fullwidth\">\n                          <select\n                            name=\"actCategory\"\n                            onChange={this.handleChange}\n                          >\n                            <option className=\"option\" value=\"\">\n                              Pick category\n                            </option>\n                            {this.props.categoriesFromBackEnd.map(\n                              oneCategory => {\n                                return (\n                                  <option\n                                    // value={oneCategory._id}\n                                    value={oneCategory._id}\n                                    key={oneCategory._id}\n                                  >\n                                    {oneCategory.title}\n                                  </option>\n                                );\n                              }\n                            )}\n                          </select>\n                        </span>\n                      </p>\n                    </div>\n\n                    <div className=\"block\">\n                      <p className>\n                        <button className=\"button\">Submit</button>\n                      </p>\n                    </div>\n                  </form>\n                </div>\n              </div>\n              <button\n                onClick={this.closeModal}\n                className=\"modal-close is-large\"\n                aria-label=\"close\"\n              ></button>\n            </div>\n          </div>\n        </section>\n      );\n    } else {\n      return \"Loading...\";\n    }\n  }\n}\n\nexport default Dashbord;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Community extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getAllUsers = () => {\n    console.log(\"blah\");\n    axios\n      .get(`${process.env.REACT_APP_IMPACT_SERVER}/community`)\n      .then(allUsersFromBackend => {\n        console.log(\"Users:\", allUsersFromBackend.data);\n      })\n      .catch(err =>\n        console.log(\"Error while getting users from the backend\", err)\n      );\n  };\n\n  render() {\n    return (\n      <section className=\"hero impactFullheight home-bg-img is-fullheight\">\n        <div className=\"hero-body\">\n          <div>\n            <p>hello</p>\n            <p>Community!</p>\n            <p>Users:</p>\n            {this.getAllUsers}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Community;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport history from \"./history\";\nimport axios from \"axios\";\n\nimport { Switch, Route, NavLink } from \"react-router-dom\";\n\nimport Signup from \"./components/user-pages/Signup\";\nimport Login from \"./components/user-pages/Login\";\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Navbar\";\nimport CategoryList from \"./components/category-components/CategoryList\";\nimport CategoryDetails from \"./components/category-components/CategoryDetails\";\nimport Dashboard from \"./components/user-pages/Dashboard\";\nimport Profile from \"./components/user-pages/Profile\";\nimport Community from \"./components/user-pages/Community\";\nimport { toast } from \"react-toastify\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      categoriesFromBackEnd: null,\n      actionsFromBackEnd: null,\n      suggestedActs: []\n    };\n  }\n\n  componentDidMount() {\n    this.getTheUser();\n    this.getAllCategories();\n    this.getAllActions();\n\n    // getAllUsers = () => {\n    //   axios\n    //     .post(`${process.env.REACT_APP_IMPACT_SERVER}/community`)\n    //     .then(allUsersFromBackend => {\n    //       console.log(\"Users:\", allUsersFromBackend.data);\n    //     })\n    //     .catch(err =>\n    //       console.log(\"Error while getting users from the backend\", err)\n    //     );\n    // };\n  }\n\n  syncCurrentUSer(user) {\n    console.log(\"USER:\", user);\n    this.setState({\n      currentUser: user,\n      suggestedActs: user.suggestedActs\n    });\n    console.log(\n      \"CURRENT USER`S ACTIONS in APP.js:\",\n      this.state.currentUser.suggestedActs\n    );\n  }\n  getTheUser = () => {\n    axios\n      .get(`${process.env.REACT_APP_IMPACT_SERVER}/api/checkuser`, {\n        withCredentials: true\n      })\n      .then(responseFromTheBackend => {\n        console.log(\"User in APP.JS: \", responseFromTheBackend.data);\n        const { userDoc } = responseFromTheBackend.data;\n        this.syncCurrentUSer(userDoc);\n      })\n      .catch(err =>\n        console.log(\n          \"Err while getting the user from the checkuser route: \",\n          err\n        )\n      );\n  };\n\n  getAllCategories = () => {\n    axios\n      .get(`${process.env.REACT_APP_IMPACT_SERVER}/category/allCats`)\n      .then(responseCategories => {\n        console.log(\n          \"Categories from DB: \",\n          responseCategories.data.allCategories\n        );\n        this.setState({\n          categoriesFromBackEnd: responseCategories.data.allCategories\n        });\n      })\n      .catch(err => console.log(\"Err while getting categories: \", err));\n  };\n\n  getAllActions = () => {\n    axios\n      .get(`${process.env.REACT_APP_IMPACT_SERVER}/acts`)\n      .then(responseActions => {\n        console.log(\"Actions are: \", responseActions.data);\n        this.setState({\n          actionsFromBackEnd: responseActions.data\n        });\n      })\n      .catch(err => console.log(\"Err while getting actions: \", err));\n  };\n\n  logout = () => {\n    this.setState({ currentUser: null });\n    axios\n      .delete(`${process.env.REACT_APP_IMPACT_SERVER}/api/logout`, {\n        withCredentials: true\n      })\n      .then(() => {\n        this.props.history.push(\"/\");\n      })\n      .catch(err => console.log(\"error while logging out \", err));\n  };\n\n  handleActNow = act => {\n    if (this.state.suggestedActs !== null) {\n      console.log(\"ACT ID FROM CATEGORY DETAILS IS :\", act._id);\n      console.log(\"CurrentUser IN APP.JS\", this.state.currentUser);\n      console.log(\"CurrentUser score IN APP.JS\", this.state.currentUser.score);\n      const userFinalActs = this.state.suggestedActs.filter(\n        action => action._id !== act._id\n      );\n      console.log(\"FINAL ACTS for user ARE: \", userFinalActs);\n      axios\n        .post(\n          `${process.env.REACT_APP_IMPACT_SERVER}/act/${act._id}/update`,\n          {},\n          {\n            withCredentials: true\n          }\n        )\n        .then(() => {\n          // make some success message here!\n          this.state.currentUser.score += act.value;\n          console.log(\"Updated Score is: \", this.state.currentUser.score);\n          this.setState({\n            suggestedActs: userFinalActs\n          });\n          toast.success(\n            `Great job! You successfully completed ${act.title}, and earned ${act.value} point(s)`\n          );\n        })\n        .catch(err => console.log(\"Error while click on `Act Now`\", err));\n    } else return \"there are no more Actions left! let'c make a new one\";\n  };\n\n  editCategory = (oneCat, updated) => {\n    console.log(\">>>>>>>>>Do i have cat here: \", oneCat);\n    console.log(\"<<<<<<<<<Updated info: \", updated);\n    if (oneCat !== null) {\n      const theId = oneCat._id;\n      const updatedCategory = updated;\n      axios\n        .post(\n          `${process.env.REACT_APP_IMPACT_SERVER}/category/${theId}/update`,\n          updatedCategory\n        )\n\n        .then(updatedCategory => {\n          this.getAllCategories();\n\n          // this.setState({\n          //   categoriesFromBackEnd: updatedCategoryList\n          // });\n        })\n        .catch(err => console.log(\"Error while editing the Category \", err));\n    }\n  };\n\n  deleteCategory = oneCat => {\n    // console.log(\"do i have cat here: \", oneCat.author);\n    // console.log(\"Current user: \", this.state.currentUser._id);\n    // && this.state.currentUser._id === oneCat.author\n    if (oneCat !== null) {\n      const theId = oneCat._id;\n      console.log(\"The id: \", theId);\n\n      axios\n        .post(`${process.env.REACT_APP_IMPACT_SERVER}/category/${theId}/delete`)\n        .then(response => {\n          const newCategories = this.state.categoriesFromBackEnd.filter(\n            category => category._id !== oneCat._id\n          );\n          this.setState({\n            categoriesFromBackEnd: newCategories\n          });\n          console.log(\"helllooooo: =-=-=-=-=-=-=-=-=-= \", history);\n          history.push(\"/\");\n          toast.error(`Category \"${oneCat.title}\" was deleted`);\n        })\n        .catch(err => console.log(\"Error while deleteing the category \", err));\n    } else return \"loading\";\n  };\n\n  render() {\n    // console.log(\"the state in APPJS: \", this.state);\n    // console.log(\"++++++++++++++\", this.state.categoriesFromBackEnd);\n    console.log(\"APP.JS |  USER\", this.state.currentUser);\n    console.log(\"APP.JS | SUGGESTED ACTS\", this.state.suggestedActs);\n\n    return (\n      <div>\n        <div className=\"\">\n          <header className=\"container\">\n            {/* <NavExample /> */}\n            <Navbar\n              theUser={this.state.currentUser}\n              doLogout={this.logout}\n              className=\"navbar is-fixed-top is-primary\"\n              role=\"navigation\"\n              aria-label=\"main navigation\"\n            />\n          </header>\n          <Switch>\n            {/* this is example how we would render component normally */}\n            {/* <Route exact path=\"/somePage\" component={ someComponentThatWillRenderWhenThisRouteIsHit }   /> */}\n            {/* <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/act/add\" component={addAct} /> */}\n\n            {/* if we have to pass some props down to a component,\n            we can't use a standard way of rendering using component={},\n            but instead we have to use render = {}  like in the example below */}\n            <Route\n              exact\n              path=\"/signup-page\"\n              render={props => (\n                <Signup\n                  {...props}\n                  currentUser={this.state.currentUser}\n                  onUserChange={userDoc => this.syncCurrentUSer(userDoc)}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/login-page\"\n              render={props => (\n                <Login\n                  {...props}\n                  currentUser={this.state.currentUser}\n                  onUserChange={userDoc => this.syncCurrentUSer(userDoc)}\n                />\n              )}\n            />\n\n            {/* <Route path=\"/category\" component={ActionList} /> */}\n\n            {/* it was the way Marcos showed me */}\n            {/* <Route\n              exact\n              path=\"/category\"\n              render={props => <CategoryList {...props} />}\n            />\n\n            <Route\n              path=\"/category/:id\"\n              render={props => <CategoryDetails {...props} />}\n            /> */}\n\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <Home\n                  {...props}\n                  getAllCategories={this.getAllCategories}\n                  currentUser={this.state.currentUser}\n                  suggestedActs={this.state.suggestedActs}\n                  categoriesFromBackEnd={this.state.categoriesFromBackEnd}\n                  actionsFromBackEnd={this.state.actionsFromBackEnd}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <CategoryList\n                  {...props}\n                  currentUser={this.state.currentUser}\n                  blah=\"blah\"\n                  categoriesFromBackEnd={this.state.categoriesFromBackEnd}\n                  actionsFromBackEnd={this.state.actionsFromBackEnd}\n                />\n              )}\n            />\n\n            <Route\n              path=\"/category/\"\n              render={props => (\n                <CategoryDetails\n                  {...props}\n                  getActIdforActNow={act => this.handleActNow(act)}\n                  getCategoryObjforDelete={catObj =>\n                    this.deleteCategory(catObj)\n                  }\n                  getCategoryObjforEdit={(catObj, category) =>\n                    this.editCategory(catObj, category)\n                  }\n                  suggestedActs={this.state.suggestedActs}\n                  getAllActions={this.getAllActions}\n                  getAllCategories={this.getAllCategories}\n                  currentUser={this.state.currentUser}\n                  categoriesFromBackEnd={this.state.categoriesFromBackEnd}\n                  actionsFromBackEnd={this.state.actionsFromBackEnd}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/dashboard\"\n              render={props => (\n                <Dashboard\n                  {...props}\n                  getActIdforActNow={act => this.handleActNow(act)}\n                  getTheUser={this.getTheUser}\n                  getAllActions={this.getAllActions}\n                  currentUser={this.state.currentUser}\n                  suggestedActs={this.state.suggestedActs}\n                  categoriesFromBackEnd={this.state.categoriesFromBackEnd}\n                  actionsFromBackEnd={this.state.actionsFromBackEnd}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/profile\"\n              render={props => (\n                <Profile\n                  {...props}\n                  suggestedActs={this.state.suggestedActs}\n                  getActIdforActNow={act => this.handleActNow(act)}\n                  currentUser={this.state.currentUser}\n                  getTheUser={this.getTheUser}\n                  categoriesFromBackEnd={this.state.categoriesFromBackEnd}\n                  actionsFromBackEnd={this.state.actionsFromBackEnd}\n                />\n              )}\n            />\n            <Route exact path=\"/community\" component={Community} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Router } from \"react-router-dom\";\nimport history from \"./history\";\nimport \"bulma/css/bulma.css\";\nimport \"bulma-helpers/css/bulma-helpers.min.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n// import \"bulma/css/bulma.css\";\n// import \"bulma-helpers/css/bulma-helpers.min.css\";\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n    <React.Fragment>\n      <ToastContainer />\n    </React.Fragment>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}